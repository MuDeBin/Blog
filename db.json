{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/hexo-theme-spfk/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/css/loading-style.css","path":"css/loading-style.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/css/showshare.css","path":"css/showshare.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/coderwall.png","path":"img/coderwall.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/delicious.png","path":"img/delicious.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/douban.png","path":"img/douban.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/facebook.png","path":"img/facebook.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/github.png","path":"img/github.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/google.png","path":"img/google.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/head.jpg","path":"img/head.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/pinboard.png","path":"img/pinboard.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/linkedin.png","path":"img/linkedin.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/instagram.png","path":"img/instagram.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/qq.png","path":"img/qq.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/mail.png","path":"img/mail.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/rss.png","path":"img/rss.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/pinterest.png","path":"img/pinterest.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/segmentfault.png","path":"img/segmentfault.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/twitter.png","path":"img/twitter.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/wechat.png","path":"img/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/weibo.png","path":"img/weibo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/zhihu.png","path":"img/zhihu.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/TweenMax.js","path":"js/TweenMax.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/instagram.js","path":"js/instagram.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/mobile.js","path":"js/mobile.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-16.jpg","path":"background/bg-16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-19.jpg","path":"background/bg-19.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-32.jpg","path":"background/bg-32.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/embed.js","path":"js/embed.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/pace.js","path":"js/pace.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/pc.js","path":"js/pc.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-25.jpg","path":"background/bg-25.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-27.jpg","path":"background/bg-27.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-28.jpg","path":"background/bg-28.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-30.jpg","path":"background/bg-30.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/css/pace/pace-theme-flash.css","path":"css/pace/pace-theme-flash.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/css/font-awesome.css","path":"font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/css/font-awesome.min.css","path":"font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/TweenMax.min.js","path":"js/TweenMax.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-23.jpg","path":"background/bg-23.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-29.jpg","path":"background/bg-29.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-35.jpg","path":"background/bg-35.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/FontAwesome.otf","path":"font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.woff","path":"font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.eot","path":"font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.woff2","path":"font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-15.jpg","path":"background/bg-15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-31.jpg","path":"background/bg-31.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-34.jpg","path":"background/bg-34.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.ttf","path":"font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/like.css","path":"static/api/css/like.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_popup.css","path":"static/api/css/share_popup.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/imgshare.css","path":"static/api/css/imgshare.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/select_share.css","path":"static/api/css/select_share.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_16.css","path":"static/api/css/share_style0_16.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_24.css","path":"static/api/css/share_style0_24.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_16.css","path":"static/api/css/share_style1_16.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_32.css","path":"static/api/css/share_style0_32.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_24.css","path":"static/api/css/share_style1_24.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_32.css","path":"static/api/css/share_style1_32.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2.css","path":"static/api/css/share_style2.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_24.css","path":"static/api/css/share_style2_24.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_32.css","path":"static/api/css/share_style2_32.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/404/jquery.parallaxify-0.0.2.min.js","path":"js/404/jquery.parallaxify-0.0.2.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/weixin_popup.css","path":"static/api/css/weixin_popup.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share.js","path":"static/api/js/share.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style4.css","path":"static/api/css/share_style4.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_16.css","path":"static/api/css/share_style2_16.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/css/slide_share.css","path":"static/api/css/slide_share.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-21.jpg","path":"background/bg-21.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-24.jpg","path":"background/bg-24.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/js/404/jquery-2.0.3.min.js","path":"js/404/jquery-2.0.3.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l8.gif","path":"static/api/img/share/l8.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/data.js","path":"static/api/js/trans/data.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/logger.js","path":"static/api/js/trans/logger.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-17.jpg","path":"background/bg-17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-33.jpg","path":"background/bg-33.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_16.png","path":"static/api/img/share/icons_1_16.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_16.png","path":"static/api/img/share/icons_0_16.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_24.png","path":"static/api/img/share/icons_1_24.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_24.png","path":"static/api/img/share/icons_0_24.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_32.png","path":"static/api/img/share/icons_0_32.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_16.png","path":"static/api/img/share/icons_2_16.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l0.gif","path":"static/api/img/share/l0.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_32.png","path":"static/api/img/share/icons_2_32.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l1.gif","path":"static/api/img/share/l1.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_32.png","path":"static/api/img/share/icons_1_32.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_24.png","path":"static/api/img/share/icons_2_24.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l3.gif","path":"static/api/img/share/l3.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l2.gif","path":"static/api/img/share/l2.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l4.gif","path":"static/api/img/share/l4.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l5.gif","path":"static/api/img/share/l5.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l6.gif","path":"static/api/img/share/l6.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l7.gif","path":"static/api/img/share/l7.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/pop_c.gif","path":"static/api/img/share/pop_c.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r0.gif","path":"static/api/img/share/r0.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r1.gif","path":"static/api/img/share/r1.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r2.gif","path":"static/api/img/share/r2.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r3.gif","path":"static/api/img/share/r3.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r6.gif","path":"static/api/img/share/r6.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r5.gif","path":"static/api/img/share/r5.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r4.gif","path":"static/api/img/share/r4.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r8.gif","path":"static/api/img/share/r8.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r7.gif","path":"static/api/img/share/r7.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/sc.png","path":"static/api/img/share/sc.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/partners.js","path":"static/api/js/component/partners.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/animate.js","path":"static/api/js/component/animate.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/selectshare_close.png","path":"static/api/img/share/selectshare_close.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/share-search-icon.png","path":"static/api/img/share/share-search-icon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/comm_tools.js","path":"static/api/js/component/comm_tools.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_popup.js","path":"static/api/js/component/pop_popup.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/anticheat.js","path":"static/api/js/component/anticheat.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_dialog.js","path":"static/api/js/component/pop_dialog.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_base.js","path":"static/api/js/component/pop_base.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/api_base.js","path":"static/api/js/share/api_base.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/likeshare.js","path":"static/api/js/share/likeshare.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_popup_slide.js","path":"static/api/js/component/pop_popup_slide.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/combine_api.js","path":"static/api/js/share/combine_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/image_api.js","path":"static/api/js/share/image_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/base/class.js","path":"static/api/js/base/class.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/qrcode.js","path":"static/api/js/component/qrcode.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/share_api.js","path":"static/api/js/share/share_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/like_api.js","path":"static/api/js/share/like_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/select_api.js","path":"static/api/js/share/select_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/conf/const.js","path":"static/api/js/conf/const.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans.js","path":"static/api/js/trans/trans.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/slide_api.js","path":"static/api/js/share/slide_api.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/conf/define.js","path":"static/api/js/conf/define.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_weixin.js","path":"static/api/js/trans/trans_weixin.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/start/router.js","path":"static/api/js/start/router.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_bdxc.js","path":"static/api/js/trans/trans_bdxc.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/share_view.js","path":"static/api/js/view/share_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/image_view.js","path":"static/api/js/view/image_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/view_base.js","path":"static/api/js/view/view_base.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_bdysc.js","path":"static/api/js/trans/trans_bdysc.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/select_view.js","path":"static/api/js/view/select_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/slide_view.js","path":"static/api/js/view/slide_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/like_view.js","path":"static/api/js/view/like_view.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-111.jpg","path":"background/bg-111.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-26.jpg","path":"background/bg-26.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/static/api/js/base/tangram.js","path":"static/api/js/base/tangram.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.svg","path":"font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-12.jpg","path":"background/bg-12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-7.jpg","path":"background/bg-7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg.jpg","path":"background/bg.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-109.jpg","path":"background/bg-109.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-6.jpg","path":"background/bg-6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-9.jpg","path":"background/bg-9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-14.jpeg","path":"background/bg-14.jpeg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-18.jpg","path":"background/bg-18.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-8.jpg","path":"background/bg-8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-10.jpg","path":"background/bg-10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg11.jpg","path":"background/bg11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-13.jpg","path":"background/bg-13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-22.jpg","path":"background/bg-22.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-20.jpg","path":"background/bg-20.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-spfk/source/background/bg-110.jpg","path":"background/bg-110.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-spfk/.gitignore","hash":"237760b38ce80bcc3a8b556566bef0295c145393","modified":1476009757000},{"_id":"source/CNAME","hash":"63c8f9230eecdb6d60ba6cc9c05ebdcc14a87581","modified":1465379477913},{"_id":"themes/hexo-theme-spfk/package.json","hash":"00357ef6f24eb049074da81809e98f973f528cca","modified":1476009757000},{"_id":"source/_posts/AndroidStudio关联github.md","hash":"eeac1e18652a53ba740066b727276c031589f9a8","modified":1478252850147},{"_id":"themes/hexo-theme-spfk/README.md","hash":"2ae12be206897ea5e08ec234e1228209d7b5218b","modified":1476009757000},{"_id":"source/_posts/hexo主题添加七牛图片.md","hash":"f41aaf1cc26d71d7eccb6411f14a53c2f7b143fa","modified":1478257197838},{"_id":"source/_posts/java笔记-Date类.md","hash":"d78a72b56c0ed5f0ef2d28e7769c79d373ed7f4c","modified":1474876812449},{"_id":"source/_posts/git操作.md","hash":"2de3049c557cce091299ddaa01188d81f90ba371","modified":1460876542000},{"_id":"themes/hexo-theme-spfk/_config.yml","hash":"436779cc847f2f56de3e3c2a9b22bfdbd4089636","modified":1476080797608},{"_id":"source/_posts/Java笔记-修饰符.md","hash":"b62dbb0da7b7a48f46beb7a20e462a5548416662","modified":1474876766139},{"_id":"source/_posts/安装hexo.md","hash":"442178e525e6b15a66923b353a6c9db42839cb5e","modified":1460877780000},{"_id":"source/_posts/java笔记-字符串.md","hash":"128b7bdc9b43852c02228d3fc9cd4a1903fbc8a8","modified":1474876800648},{"_id":"source/_posts/校招.md","hash":"fd392f473e9de0d0c52718ba54107a31331bcc29","modified":1478255738616},{"_id":"source/_posts/记录.md","hash":"0d14dc942ce5b3e62501699aede17508375aa1f6","modified":1478248631377},{"_id":"source/_posts/证书.md","hash":"e6855353c500a944475ca5619d41073ca104bfe8","modified":1478256320171},{"_id":"themes/hexo-theme-spfk/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1476009757000},{"_id":"source/_posts/安装windows系统教程.md","hash":"dc82e5410fdab63f28d13e2fe62787f8ca4bd88d","modified":1474876860127},{"_id":"themes/hexo-theme-spfk/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1476009757000},{"_id":"source/_posts/搭建Blog的想法.md","hash":"88eb35641d7259cbeae95cf90d23a377c5dd60b2","modified":1460877894000},{"_id":"themes/hexo-theme-spfk/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/layout.ejs","hash":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/plugins.swig","hash":"f809b5e62e968a80921c56e5d7658325b48b7263","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/de.yml","hash":"ecb13af8af81ccc033ae7494cb2f94f84f6466ad","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/default.yml","hash":"9e59cd11b290be84909612beb12d0f93ce737f53","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/en.yml","hash":"8fa0a7482188ca56fd3cf19c4a87320f85a76846","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/apple-touch-icon.png","hash":"c36a373c7830d61d1ce092bd5a88d0e9b54212fd","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/fr-FR.yml","hash":"12cfa96dc412ecb6f8bf4de2690575929464906e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/pt-BR","hash":"922b6d836cc690742b2d55a725e3886c5d0cbb75","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/ru.yml","hash":"9997425292031ee8a58a93346ac6d3f38f18e566","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/zh-Hans.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/zh-hk.yml","hash":"606dfb34d3fec1d7895a654ff7a5a1de0c6a5c55","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/zh-tw.yml","hash":"9e4034870b57d2bb3063c91f8d206a6c4d7b3789","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/languages/zh.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/archive-post.ejs","hash":"8af583c5f60c69ffdc97bee4e8fdac1ba34ebecd","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/after-footer.ejs","hash":"d2d8fda1d50d193088dbd641c6dcc3bd2bdf0165","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/case.swig","hash":"a2a7ec0e4c203e49fd32335c60c3b9851ed6e4a5","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/bodybackground.ejs","hash":"931700a928b84577cc33dfff68a009188885f6c0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/background.ejs","hash":"cb656037dae582272c748c68a174f2da622d5a12","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/head.ejs","hash":"6f34f1062b8bbd46bb5216332c8110c08697c6d2","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/footer.ejs","hash":"0e54ea8678e6d6f0bf98a4b76f5c4ee4d424893f","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/article.ejs","hash":"13f788f96eec6cad9c29a6f373b88c164b279856","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/mathjax.ejs","hash":"cdfd21f079933f3a275bc4088e1ca5e6068e75b4","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/hide-labels.ejs","hash":"e981795db4954ba5cc9d6844a6a2799bffdc0af3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/mobile-nav.ejs","hash":"320de58b166710d02963d80f27bcd50478841401","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/plugin.swig","hash":"17b6c6945e4b1b41dbb10d851f85ca10100c28ea","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/left-col.ejs","hash":"9d9aaecfd40903be38b97c46d6b7f1ea3fd7354e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/theme.swig","hash":"5a279ad8f6c6b7c104cce495faa563d8b7a7c74a","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/scrolling-button.ejs","hash":"b3a28974f37375796687e6100b48c3da6f662640","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/post-nav-button.ejs","hash":"c817bdf39f62670872aae19accea4c51f5e0bfa7","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/work.swig","hash":"6bdb6ec45f6179875e5a33bfdc7568a3831638fd","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/page.ejs","hash":"55ffdcc87b5fa50afdc370f439c0e812e307cbff","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/toc.ejs","hash":"84bbda825793de643d5a40190fab2160af1e75e3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_variables.styl","hash":"a753c14f409a294188f2e99575f2c10b82fd56a2","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/loading-style.css","hash":"1f67362d809e85edc9f122db7bc3711af1ed1d8b","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/style.styl","hash":"806fc5c30a2ba90b80ba5387e5c3ff0cda004a5c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/showshare.css","hash":"d5288601c95acd7fea993ac8cc3d04efcbdd1559","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/head.jpg","hash":"c40528203f9c1c6ae14e18d75c2ba52b1a9a223e","modified":1465369438285},{"_id":"themes/hexo-theme-spfk/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/instagram.png","hash":"3c148a3882a8d141d7d405be8c4815d0dcb03561","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/qq.png","hash":"fd741764c5528fe371f053beac99839a97900eef","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/segmentfault.png","hash":"4483ab273423deb65021111fc8ad9512b69e45b2","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/wechat.png","hash":"7ca41b6e32ca4dac419225261ab4fee5a88f73a9","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/clipboard.min.js","hash":"c13b4bb8fee46447284590d2afc0efca0ea3cb7b","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/TweenMax.js","hash":"0ba64564a4fde4085fa3971dd53b7d64a41751e1","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/main.js","hash":"921b2fb56e48cce3d16ceb4a3fadf8e666c73a0a","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/jquery.lazyload.js","hash":"8e4ad3e17f8e82be311b6b6e87811762e2b2d764","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/mobile.js","hash":"d3847e5bcaf39108931724ecb02770c62b10889f","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/plugins.js","hash":"c1cf96b2d852b5803228a34d99014b005623bc06","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/background/bg-16.jpg","hash":"b09a19a63079c0f1271a81e2bf560f1aaa273bb0","modified":1465369438118},{"_id":"themes/hexo-theme-spfk/source/background/bg-19.jpg","hash":"fbd1aa2ffc4c12c4fa73cb71c28ed85a137dc9f7","modified":1465369438133},{"_id":"themes/hexo-theme-spfk/source/background/bg-32.jpg","hash":"201d01a6fd8ed7f9b3c57dee2710bb42f6529c17","modified":1446879096000},{"_id":"themes/hexo-theme-spfk/source/js/embed.js","hash":"8d2d4a812ab639bc02fdd8749d3a39f6b9406c54","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/pace.js","hash":"b49c10cd65d9488f7338e3c778e55ac6628650f3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/pc.js","hash":"ab375af6e3bcd054b1e87e1a8dcd3d7d25c2db40","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/comments/disqus.ejs","hash":"7792a79ab85ef28551cc2a793735973b1d5521a7","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/analytics/baidu-analytics.ejs","hash":"b21500b87d79a0068e3ca0408b4e125e3e749d01","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/comments/duoshuo.ejs","hash":"f6112c3f08f46dde1c0ba6a5bee8017624590e47","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/analytics/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/comments/youyan.ejs","hash":"a6853b59ee60e775de1ed90b242084f83774d195","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/category.ejs","hash":"265bb12f7cfa5e0bcbb74fdd409ba13a6d9d2e22","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/date.ejs","hash":"1cfcf2e06ab9b1c6dcd44f41825dfe98d400c7ea","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/loading.ejs","hash":"52a576a8afee08d33c6f69a61c496e1820132e91","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/TipTitle.ejs","hash":"65b0956edca84e0bc0eb616ec236309822d5f803","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/swiftype.ejs","hash":"76374e601d911e1279e1944d2a6b7eb3391c7c7c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/tag.ejs","hash":"9dad471e27de9e066666f3082137eccaede2e67b","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/post/nav.ejs","hash":"4779c17cf76bf4560e52708102467bb8ec7a2781","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/background/bg-25.jpg","hash":"2b7dcc7bb7aa03e8507ce3114a63a14e3c3ac553","modified":1465369438187},{"_id":"themes/hexo-theme-spfk/source/background/bg-27.jpg","hash":"f4d1d450020f77fcd3dbc444e312ed9144c82068","modified":1452258416000},{"_id":"themes/hexo-theme-spfk/source/background/bg-28.jpg","hash":"09cbd10b5c06a945577c2db8b870d049d00be9b6","modified":1457690186000},{"_id":"themes/hexo-theme-spfk/source/background/bg-30.jpg","hash":"b821a3c3c748f255cbc0ab2643afe7e767702987","modified":1457690684000},{"_id":"themes/hexo-theme-spfk/layout/_partial/share/share.ejs","hash":"62467610ba6df9b63350d163e806be774dcf5a00","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/share/showshare.ejs","hash":"410b809eb6c50bacfd9e1e573f1e0251841bc79d","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/layout/_partial/share/baidu-share.ejs","hash":"993b7d231881601ba79aab1e78d75dcb271b3500","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/baidushare.styl","hash":"fe36e3d8933b1b0b674aaf16e50dbf6090099912","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/footer.styl","hash":"cbf916a5338e69e05d0815c53aeb818d636b6d99","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/archive.styl","hash":"a8bc2e2458bcc51fa68122274a41f5e4e52a8ebd","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/article.styl","hash":"e4cfd779fbf6ea7687d4b86ff157df69a322ce85","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/instagram.styl","hash":"db9cc156c7df27f7f54b0e7ff34b5949f55f99eb","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/highlight.styl","hash":"62d7930e9556f893088c65c5fc4229a10ebc7671","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/main.styl","hash":"6e3d15fbe2663bb6fc408df4a771925c3eac65cf","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/plugins.styl","hash":"629ae10dfc053dbfc074966f0bf7f0115acf65e2","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/scroll.styl","hash":"1932774d30b8706919342f9cf36ea2d99987ce14","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/mobile-slider.styl","hash":"3bf9f2359f68c700e21618ad6262db81038c3d96","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/mobile.styl","hash":"53b1a06e08df81427505cbc76cc8eb02bea54356","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/page.styl","hash":"46b9c91428c1e1f42cc8a1010f600f70fb8edc82","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/share.styl","hash":"2dde7c9ea40c71fce3dbd8d5e2bcc8d9682141b8","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/wheelmenu.styl","hash":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/pace/pace-theme-flash.css","hash":"508bce8b59a1fbc1f1443a7c4ab3b026e5517dab","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/tagcloud.styl","hash":"91e6553775ca931a1b3db1ab11c4cf227df68c21","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/font-awesome/css/font-awesome.css","hash":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/font-awesome/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/img/favicon.png","hash":"df71f6793236a43f5cb98c29f002d3d531971cf5","modified":1465369438284},{"_id":"themes/hexo-theme-spfk/source/js/TweenMax.min.js","hash":"eaa4e4a08400da3f22dedda706ba56cdce5b0b7a","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/background/bg-2.jpg","hash":"10e5fbc2cbe61f7ca1791b7a627e01157001fe8b","modified":1465369438135},{"_id":"themes/hexo-theme-spfk/source/background/bg-23.jpg","hash":"0ff7c1ce14527ca3a46ccb1461af813951d7f4a2","modified":1465369438184},{"_id":"themes/hexo-theme-spfk/source/background/bg-29.jpg","hash":"e2e11d2e3a1a9600fac19c6a020e8ef72366b80d","modified":1457690724000},{"_id":"themes/hexo-theme-spfk/source/background/bg-35.jpg","hash":"c2b3a1a00db9420b37e31bbe8f04d0288a263b91","modified":1457690706000},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/background/bg-15.jpg","hash":"7669f0d9ae060236c91254663693034c53b343ee","modified":1465369438116},{"_id":"themes/hexo-theme-spfk/source/background/bg-31.jpg","hash":"c99c972f97258718278948a44bd85b3c1a42e93f","modified":1457690262000},{"_id":"themes/hexo-theme-spfk/source/background/bg-34.jpg","hash":"7669f0d9ae060236c91254663693034c53b343ee","modified":1446879174000},{"_id":"themes/hexo-theme-spfk/source/background/bg-5.jpg","hash":"717ddf12d15f45b350c1c82504cbb2130ad82b0a","modified":1465369438203},{"_id":"themes/hexo-theme-spfk/source/css/_partial/customise/code-block.styl","hash":"1f05c0558b2970c369fe19bafbc8a1821c09bce0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/customise/inline-code.styl","hash":"ac2fcef8823d5566c0e27f23b2a46beecbd71c72","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/post/youyan.styl","hash":"ac2869e2e0fb3a1ee0df4b0c0a233a2b1923ea20","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/css/_partial/customise/blockquote.styl","hash":"83179f1d0e12b025cd433a6071b2826c2b4168cc","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/like.css","hash":"2024d58206df01b858c38f07957f928b44e14cb3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_popup.css","hash":"338ba2b30ef8ce0c84cd36b37d7f8482996291dc","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/imgshare.css","hash":"c3624a2dde649ed28b2e5d1f050fd971fbaf71a0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/select_share.css","hash":"d0259abdb410193cf761e42bffaa51e70327a0cd","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_16.css","hash":"090e77e9e6e9b8ee0d73a233cbe46499de935bdd","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_24.css","hash":"7d1f9f32b80f91001f4f951aa045180cde22d82e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_16.css","hash":"aeb4e9fa96cfa0167481e1f4007079dc3f3c6c27","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style0_32.css","hash":"7c2d12ea532c8a55c102b649bb23ef5bf53b3ed3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_24.css","hash":"3ee5f745c863b4f68299fe5dc125f913ca619c07","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style1_32.css","hash":"626d67a4c0bb72a152e90d25dbf281c0c35a2140","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2.css","hash":"1ad451187cde8a74843fd398b924ca0ac911e9be","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_24.css","hash":"917d963d3be111064cbb1d122963da91ee3724a0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_32.css","hash":"3657bbc4b5bbc66ebca4906ee0a1cbf9f98be883","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/js/404/jquery.parallaxify-0.0.2.min.js","hash":"b97e2dfcb210b76f7bdd6e1800b26128bf4fad99","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/weixin_popup.css","hash":"5e6c5084bfd16051de5776c2e136a5462b08a32c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share.js","hash":"5e71147fe4a93bc99387a5cc1c6894d8b6ab2d5e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style4.css","hash":"0a9e2ed712a5ef5c4699c038cd001a0d688a0fdf","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/share_style2_16.css","hash":"572c8e856988e463eb865f38d33ba003cc20d083","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/css/slide_share.css","hash":"3898feaf45559b039f885bee8f9e831f48adb20c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/background/bg-21.jpg","hash":"d36e0c5c8ac75af1a00fa9b66db7e815c507ce33","modified":1465369438166},{"_id":"themes/hexo-theme-spfk/source/background/bg-24.jpg","hash":"cffe1c051f8226575bf6e33ee5a3437587eff258","modified":1465369438186},{"_id":"themes/hexo-theme-spfk/source/js/404/jquery-2.0.3.min.js","hash":"fbf9c77d0c4e3c34a485980c1e5316b6212160c8","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l8.gif","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/data.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/logger.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/background/bg-17.jpg","hash":"1176d7dc7e402300013e57f1ddc0953f4e040e18","modified":1465369438121},{"_id":"themes/hexo-theme-spfk/source/background/bg-33.jpg","hash":"1176d7dc7e402300013e57f1ddc0953f4e040e18","modified":1446878276000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_16.png","hash":"3793c3265429ab7b830bfaf18322259cd0b4c4ef","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_16.png","hash":"0eec1e81a04664b2032bd389513349e9bd5d5b0f","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_24.png","hash":"9f1d472095dbe138ef7aff069b1d18cae6ffa942","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_24.png","hash":"a89223f9714c8c4fa169430a327963ca6a1c9a6e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_0_32.png","hash":"c20521634fdacef39631031671528713e6ba6081","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_16.png","hash":"07340442cb61aabb419dd226f4bfb206a7577f52","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l0.gif","hash":"738b92632b0a9789a9eb568b8d101eb64f55f6e0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_32.png","hash":"deba62865245a6b5aafa446787d72165c703b943","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l1.gif","hash":"70e1932ca7a622ed3322b683eceb7a590860a55e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_1_32.png","hash":"09825de5f238c97e4374d545961d6e0d5bbfb3e2","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/icons_2_24.png","hash":"e47fb87c533f2be89f22901f0864d9b5ef83412d","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l3.gif","hash":"26c0dd37d98df63abb9d3d83e01bb47c34ee3f0f","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l2.gif","hash":"e6a5d6104c226a686d48759e0268e09d762e242e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l4.gif","hash":"8a9c3cf99766d3f07a9c480cfdffdc3197b9a6b9","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l5.gif","hash":"148706f56b8ef4fd9d8483d0ac3a6730e72fc0ad","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l6.gif","hash":"f4b8e3188f744f13aca46b27b451d55d9e209c48","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/l7.gif","hash":"e4f7e5e56c8f4eb026b5cb0affe3bd69c31af261","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/pop_c.gif","hash":"e8b9ece6ddaa47ccb2c15f2396d1cd3020740603","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r0.gif","hash":"882f255fbafc0136a3917c1dd40db88879c1b1c1","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r1.gif","hash":"96064d132ee2477c0e444c2e18162f9d1dc9e9c2","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r2.gif","hash":"67c84a67be3b039892e9cb8c7c29ed29813bf60f","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r3.gif","hash":"ecdd21f1457be54afc96e2d005524eef93d7bf85","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r6.gif","hash":"4bc01e08ef0015fddf5b8c7257c094ec584ca3ee","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r5.gif","hash":"e61b32d1830390303927bdab21823959f8dc7023","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r4.gif","hash":"517435e69a2215a0f003e75a4861154ca963c30e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r8.gif","hash":"c068ece54a72a3f2428d4f1b5ca7c176f027dd4e","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/r7.gif","hash":"3c596c924910c93cf3e37cc1b2870dbf271151e2","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/sc.png","hash":"e5a2ca56973a3d6608e7e3a48ebd9fa5ebda9991","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/partners.js","hash":"a4c275ffb4d3557280211e6bf0573485b397ffd8","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/animate.js","hash":"00b6f74ed82e5a21a9295dd2dc963e892734b7f6","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/selectshare_close.png","hash":"6f3666278268890a153c85fb9f04ac848c442561","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/img/share/share-search-icon.png","hash":"0629677a7eb5aa3e8bab3faa310c6d8c467a3287","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/comm_tools.js","hash":"e651fbb1a85ab9c615ee833f4d042c203ef430bc","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_popup.js","hash":"aface5a8c3f71e9e024bf0df5b361ed8f5452f50","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/anticheat.js","hash":"ee6b11a7ed39ae67c1c2aeeef96b4a0f40f8083c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_dialog.js","hash":"4417d2fa9ad8ff6c79a2352ef07e9d10a1313ee0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_base.js","hash":"eae6e120c149a21caa2883c533ccc40bc07fda51","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/api_base.js","hash":"cbacd664451f80955c2ff4caccd4b9110062c714","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/likeshare.js","hash":"d088ffe7b6451cedf202280d16e85f75a8c3bfd3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/pop_popup_slide.js","hash":"1119fc14abd34ffb8e1f653cd30ca26adaafa3bf","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/combine_api.js","hash":"c45d76df1707b4fd739dae7022dc4a015632a81a","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/image_api.js","hash":"43a93415f2a5dd34760042c2bcd9f4692feecb5d","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/base/class.js","hash":"ad1e5a3011e30b83ac8aaeabffc3311dcb151bf5","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/component/qrcode.js","hash":"2e3cc4cc5545556dd97ab899ff32d3ab7ccee808","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/share_api.js","hash":"f7b86d0cc063f692a73a174d04e77cbe3c5facc7","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/like_api.js","hash":"3526047b7f9f7446b883e2fa5ebcf143526449be","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/select_api.js","hash":"bf259a7912ee6124d741dbb5e45cab40bfa45e90","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/conf/const.js","hash":"e2269411b129b847eca265fbc73f0d573f2474bb","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans.js","hash":"2bf87aff540cba3bee6cc05a7a8e9a2bc8b5d907","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/share/slide_api.js","hash":"c317e3f7fec13d89178e475f26a689bb94e5aa76","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/conf/define.js","hash":"1393906ec26b7cf711c18e569a64f7d0c1951fc7","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_weixin.js","hash":"e68e9bc91ee6fbcd64ac788463870f01602a8562","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/start/router.js","hash":"97c195ae0d30dd8c7aac55a0555f082eeed4eee0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_bdxc.js","hash":"da78025de5717315252d2d33b4252c89b891c71c","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/share_view.js","hash":"f445ce9cbbcf887da5e248b1cfadc03ab7df76d0","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/image_view.js","hash":"bb66297a5bd2c7dd931b9145f5d4a616876f3373","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/view_base.js","hash":"b3fd7dafde05d63af3dfe9e0a59f9367f81402c5","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/trans/trans_bdysc.js","hash":"1be632b99fdd67ba5279aa6c56db7d528fd094c3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/select_view.js","hash":"2611efec1d31d85609feea0c57e14d3f817a6220","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/slide_view.js","hash":"973ded5cd15eb119e79ffd9326af3a44167b26bd","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/view/like_view.js","hash":"42b51bd3ee4815b9ca8df6dacb9c81a8a34d762a","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/background/bg-111.jpg","hash":"e1631b47fede8da6c03582ceed648668547c4f09","modified":1474973406633},{"_id":"themes/hexo-theme-spfk/source/background/bg-26.jpg","hash":"f8d6bc27e78168afd8fc2e1c67c1737800735fde","modified":1464078382000},{"_id":"themes/hexo-theme-spfk/source/static/api/js/base/tangram.js","hash":"e1952e27f6dc3d6339128cec157acef8cc0a775f","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/font-awesome/fonts/fontawesome-webfont.svg","hash":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3","modified":1476009757000},{"_id":"themes/hexo-theme-spfk/source/background/bg-12.jpg","hash":"778e135d80391d93baeffc76e6715b13bb68d552","modified":1465369438082},{"_id":"themes/hexo-theme-spfk/source/background/bg-7.jpg","hash":"899f65e2c0dcc24e0f8fc6e414e0a0477d061c6a","modified":1465369438215},{"_id":"themes/hexo-theme-spfk/source/background/bg.jpg","hash":"778e135d80391d93baeffc76e6715b13bb68d552","modified":1465369438237},{"_id":"themes/hexo-theme-spfk/source/img/bg.jpg","hash":"778e135d80391d93baeffc76e6715b13bb68d552","modified":1465369438282},{"_id":"themes/hexo-theme-spfk/source/background/bg-1.jpg","hash":"c984e1f1028b0619602e7b0f0bc3fb3bff2453a1","modified":1465369438068},{"_id":"themes/hexo-theme-spfk/source/background/bg-109.jpg","hash":"cbbef90e5d3223ec44b7c234de1aa9499926a610","modified":1446878078000},{"_id":"themes/hexo-theme-spfk/source/background/bg-3.jpg","hash":"96276a3d9028b68dd95c2c31d27a2110e748fb20","modified":1465369438193},{"_id":"themes/hexo-theme-spfk/source/background/bg-6.jpg","hash":"14d2145864055313f05280c22fbad29465f6d34a","modified":1465369438209},{"_id":"themes/hexo-theme-spfk/source/background/bg-4.jpg","hash":"671475625d382686a321835e3cae77dc46c444ab","modified":1465369438200},{"_id":"themes/hexo-theme-spfk/source/background/bg-9.jpg","hash":"472a81d51ddcf9adb761bcabfa4754b895e6b6a9","modified":1465369438231},{"_id":"themes/hexo-theme-spfk/source/background/bg-14.jpeg","hash":"708074968f618e5b5eedefc406ba2bad9dc1ca3e","modified":1465369438113},{"_id":"themes/hexo-theme-spfk/source/background/bg-18.jpg","hash":"0a4cba68635117840f40e4c0cc3f7244dc673911","modified":1465369438132},{"_id":"themes/hexo-theme-spfk/source/background/bg-8.jpg","hash":"14ab14c8ea23d514882cc4b36bf4e389a5a798f1","modified":1465369438225},{"_id":"themes/hexo-theme-spfk/source/background/bg-10.jpg","hash":"8a45c787099efa6f5a636009b7701fa48f881e21","modified":1465369438075},{"_id":"themes/hexo-theme-spfk/source/background/bg11.jpg","hash":"2be8d6b329afc87b065e78e745967d715452626b","modified":1465369438252},{"_id":"themes/hexo-theme-spfk/source/background/bg-13.jpg","hash":"8c48f6afeeaf30bd95066b27001af1be2be94368","modified":1465369438101},{"_id":"themes/hexo-theme-spfk/source/background/bg-22.jpg","hash":"973eb8f1e248001fda94fd17fb78f2a6c128b28a","modified":1465369438181},{"_id":"themes/hexo-theme-spfk/source/background/bg-20.jpg","hash":"42593c2370ef5bcd639500a84a56e4a2b4554543","modified":1465369438163},{"_id":"themes/hexo-theme-spfk/source/background/bg-110.jpg","hash":"377b9e8a851351c15d43b73b8106891eed1e278b","modified":1446706946000}],"Category":[{"name":"Android","_id":"civ3o6v960002f027d9ib28qg"},{"name":"hexo","_id":"civ3o6v9p0007f027ibzroxt4"},{"name":"git","_id":"civ3o6va2000cf027nkh1pg3i"},{"name":"Java","_id":"civ3o6va9000if02788vpfg2n"},{"name":"github","parent":"civ3o6v960002f027d9ib28qg","_id":"civ3o6van000of0276wwu2twy"},{"name":"blog","parent":"civ3o6v9p0007f027ibzroxt4","_id":"civ3o6var000vf027lojfddr4"},{"name":"学习总结","_id":"civ3o6var000xf0277lbexz4t"},{"name":"思考感悟","_id":"civ3o6vas000zf027w63jdmhj"},{"name":"hexo","parent":"civ3o6va2000cf027nkh1pg3i","_id":"civ3o6vat0011f027tbltqewv"},{"name":"思考总结","_id":"civ3o6vau0013f027h2nkucrq"},{"name":"学习总结","parent":"civ3o6van000of0276wwu2twy","_id":"civ3o6vau0015f027bl55061s"},{"name":"hexo","parent":"civ3o6var000xf0277lbexz4t","_id":"civ3o6vaw0018f027jmvkxogq"},{"name":"windows","_id":"civ3o6vbr001gf0277hed8lsu"},{"name":"学习总结","parent":"civ3o6vas000zf027w63jdmhj","_id":"civ3o6vbs001jf027hhird6ot"},{"name":"学习总结","parent":"civ3o6vbr001gf0277hed8lsu","_id":"civ3o6vbt001kf0271x9ho8qg"},{"name":"win 7/10","parent":"civ3o6vbt001kf0271x9ho8qg","_id":"civ3o6vbu001nf027q59cndbk"}],"Data":[],"Page":[],"Post":[{"title":"AndroidStudio关联github","date":"2016-10-24T13:30:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"**AndroidStudio关联github,让我们远程提交代码到github**  <!-- more -->\n    提示：所有以下操作是在安装好git并远程连接上jithub  \n# Git\n## 运行AndroidStudio,选择 File-->Setting\n   ![android](http://og3vcdqsa.bkt.clouddn.com/setting.PNG)\n##  选择Version Control --> Git\n   ![git](http://og3vcdqsa.bkt.clouddn.com/git.PNG)\n## 在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。\n![git](http://og3vcdqsa.bkt.clouddn.com/succ.PNG)\n# 链接github\n## Setting-->Version Control-->github 。输入自己github的账号\n![github](http://og3vcdqsa.bkt.clouddn.com/github.PNG)\n## 点击Test 提示如下则成功\n![github](http://og3vcdqsa.bkt.clouddn.com/github-sucess.PNG)\n# 提交\n## 现在我们就可以提交自己的项目到github了，步骤：VCS-->蓝色选项\n![commit](http://og3vcdqsa.bkt.clouddn.com/%E8%B7%AF%E5%BE%84.png)\n![](http://og3vcdqsa.bkt.clouddn.com/%E9%93%BE%E6%8E%A5.PNG)\n自己设置了提交密匙\n![commit](http://og3vcdqsa.bkt.clouddn.com/%E6%8F%90%E4%BA%A4.PNG)\n![commit](http://og3vcdqsa.bkt.clouddn.com/%E5%AE%8C%E6%88%90%E6%8F%90%E7%A4%BA.PNG)\n**github上新增**\n![commit](http://og3vcdqsa.bkt.clouddn.com/web.PNG)\n# 到此，完成！","source":"_posts/AndroidStudio关联github.md","raw":"---\ntitle: AndroidStudio关联github\ndate:  2016-10-24 21:30:41\ncategories:\n- Android\n- github\n\n# tags: \n- 学习总结\n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink: \n---\n**AndroidStudio关联github,让我们远程提交代码到github**  <!-- more -->\n    提示：所有以下操作是在安装好git并远程连接上jithub  \n# Git\n## 运行AndroidStudio,选择 File-->Setting\n   ![android](http://og3vcdqsa.bkt.clouddn.com/setting.PNG)\n##  选择Version Control --> Git\n   ![git](http://og3vcdqsa.bkt.clouddn.com/git.PNG)\n## 在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。\n![git](http://og3vcdqsa.bkt.clouddn.com/succ.PNG)\n# 链接github\n## Setting-->Version Control-->github 。输入自己github的账号\n![github](http://og3vcdqsa.bkt.clouddn.com/github.PNG)\n## 点击Test 提示如下则成功\n![github](http://og3vcdqsa.bkt.clouddn.com/github-sucess.PNG)\n# 提交\n## 现在我们就可以提交自己的项目到github了，步骤：VCS-->蓝色选项\n![commit](http://og3vcdqsa.bkt.clouddn.com/%E8%B7%AF%E5%BE%84.png)\n![](http://og3vcdqsa.bkt.clouddn.com/%E9%93%BE%E6%8E%A5.PNG)\n自己设置了提交密匙\n![commit](http://og3vcdqsa.bkt.clouddn.com/%E6%8F%90%E4%BA%A4.PNG)\n![commit](http://og3vcdqsa.bkt.clouddn.com/%E5%AE%8C%E6%88%90%E6%8F%90%E7%A4%BA.PNG)\n**github上新增**\n![commit](http://og3vcdqsa.bkt.clouddn.com/web.PNG)\n# 到此，完成！","slug":"AndroidStudio关联github","published":1,"updated":"2016-11-04T09:47:30.147Z","layout":"post","photos":[],"link":"","_id":"civ3o6v8u0000f0272wrbmran","content":"<p><strong>AndroidStudio关联github,让我们远程提交代码到github</strong>  <a id=\"more\"></a><br>    提示：所有以下操作是在安装好git并远程连接上jithub  </p>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><h2 id=\"运行AndroidStudio-选择-File–-gt-Setting\"><a href=\"#运行AndroidStudio-选择-File–-gt-Setting\" class=\"headerlink\" title=\"运行AndroidStudio,选择 File–&gt;Setting\"></a>运行AndroidStudio,选择 File–&gt;Setting</h2><p>   <img src=\"http://og3vcdqsa.bkt.clouddn.com/setting.PNG\" alt=\"android\"></p>\n<h2 id=\"选择Version-Control-–-gt-Git\"><a href=\"#选择Version-Control-–-gt-Git\" class=\"headerlink\" title=\"选择Version Control –&gt; Git\"></a>选择Version Control –&gt; Git</h2><p>   <img src=\"http://og3vcdqsa.bkt.clouddn.com/git.PNG\" alt=\"git\"></p>\n<h2 id=\"在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。\"><a href=\"#在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。\" class=\"headerlink\" title=\"在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。\"></a>在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。</h2><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/succ.PNG\" alt=\"git\"></p>\n<h1 id=\"链接github\"><a href=\"#链接github\" class=\"headerlink\" title=\"链接github\"></a>链接github</h1><h2 id=\"Setting–-gt-Version-Control–-gt-github-。输入自己github的账号\"><a href=\"#Setting–-gt-Version-Control–-gt-github-。输入自己github的账号\" class=\"headerlink\" title=\"Setting–&gt;Version Control–&gt;github 。输入自己github的账号\"></a>Setting–&gt;Version Control–&gt;github 。输入自己github的账号</h2><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/github.PNG\" alt=\"github\"></p>\n<h2 id=\"点击Test-提示如下则成功\"><a href=\"#点击Test-提示如下则成功\" class=\"headerlink\" title=\"点击Test 提示如下则成功\"></a>点击Test 提示如下则成功</h2><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/github-sucess.PNG\" alt=\"github\"></p>\n<h1 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a>提交</h1><h2 id=\"现在我们就可以提交自己的项目到github了，步骤：VCS–-gt-蓝色选项\"><a href=\"#现在我们就可以提交自己的项目到github了，步骤：VCS–-gt-蓝色选项\" class=\"headerlink\" title=\"现在我们就可以提交自己的项目到github了，步骤：VCS–&gt;蓝色选项\"></a>现在我们就可以提交自己的项目到github了，步骤：VCS–&gt;蓝色选项</h2><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E8%B7%AF%E5%BE%84.png\" alt=\"commit\"><br><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E9%93%BE%E6%8E%A5.PNG\" alt=\"\"><br>自己设置了提交密匙<br><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E6%8F%90%E4%BA%A4.PNG\" alt=\"commit\"><br><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E5%AE%8C%E6%88%90%E6%8F%90%E7%A4%BA.PNG\" alt=\"commit\"><br><strong>github上新增</strong><br><img src=\"http://og3vcdqsa.bkt.clouddn.com/web.PNG\" alt=\"commit\"></p>\n<h1 id=\"到此，完成！\"><a href=\"#到此，完成！\" class=\"headerlink\" title=\"到此，完成！\"></a>到此，完成！</h1>","excerpt":"<p><strong>AndroidStudio关联github,让我们远程提交代码到github</strong>","more":"<br>    提示：所有以下操作是在安装好git并远程连接上jithub  </p>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><h2 id=\"运行AndroidStudio-选择-File–-gt-Setting\"><a href=\"#运行AndroidStudio-选择-File–-gt-Setting\" class=\"headerlink\" title=\"运行AndroidStudio,选择 File–&gt;Setting\"></a>运行AndroidStudio,选择 File–&gt;Setting</h2><p>   <img src=\"http://og3vcdqsa.bkt.clouddn.com/setting.PNG\" alt=\"android\"></p>\n<h2 id=\"选择Version-Control-–-gt-Git\"><a href=\"#选择Version-Control-–-gt-Git\" class=\"headerlink\" title=\"选择Version Control –&gt; Git\"></a>选择Version Control –&gt; Git</h2><p>   <img src=\"http://og3vcdqsa.bkt.clouddn.com/git.PNG\" alt=\"git\"></p>\n<h2 id=\"在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。\"><a href=\"#在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。\" class=\"headerlink\" title=\"在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。\"></a>在右侧path里找到git安装的路径，点击test，弹出提示，说明连接成功。</h2><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/succ.PNG\" alt=\"git\"></p>\n<h1 id=\"链接github\"><a href=\"#链接github\" class=\"headerlink\" title=\"链接github\"></a>链接github</h1><h2 id=\"Setting–-gt-Version-Control–-gt-github-。输入自己github的账号\"><a href=\"#Setting–-gt-Version-Control–-gt-github-。输入自己github的账号\" class=\"headerlink\" title=\"Setting–&gt;Version Control–&gt;github 。输入自己github的账号\"></a>Setting–&gt;Version Control–&gt;github 。输入自己github的账号</h2><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/github.PNG\" alt=\"github\"></p>\n<h2 id=\"点击Test-提示如下则成功\"><a href=\"#点击Test-提示如下则成功\" class=\"headerlink\" title=\"点击Test 提示如下则成功\"></a>点击Test 提示如下则成功</h2><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/github-sucess.PNG\" alt=\"github\"></p>\n<h1 id=\"提交\"><a href=\"#提交\" class=\"headerlink\" title=\"提交\"></a>提交</h1><h2 id=\"现在我们就可以提交自己的项目到github了，步骤：VCS–-gt-蓝色选项\"><a href=\"#现在我们就可以提交自己的项目到github了，步骤：VCS–-gt-蓝色选项\" class=\"headerlink\" title=\"现在我们就可以提交自己的项目到github了，步骤：VCS–&gt;蓝色选项\"></a>现在我们就可以提交自己的项目到github了，步骤：VCS–&gt;蓝色选项</h2><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E8%B7%AF%E5%BE%84.png\" alt=\"commit\"><br><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E9%93%BE%E6%8E%A5.PNG\" alt=\"\"><br>自己设置了提交密匙<br><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E6%8F%90%E4%BA%A4.PNG\" alt=\"commit\"><br><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E5%AE%8C%E6%88%90%E6%8F%90%E7%A4%BA.PNG\" alt=\"commit\"><br><strong>github上新增</strong><br><img src=\"http://og3vcdqsa.bkt.clouddn.com/web.PNG\" alt=\"commit\"></p>\n<h1 id=\"到此，完成！\"><a href=\"#到此，完成！\" class=\"headerlink\" title=\"到此，完成！\"></a>到此，完成！</h1>"},{"title":"hexo博客添加七牛图片，实现高速加载","date":"2016-11-01T11:45:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"# 用七牛云存储加载博客图片\n[七牛](http://www.qiniu.com)\n<!-- more -->\n# 注册七牛网站\n\n\n---\n\n","source":"_posts/hexo主题添加七牛图片.md","raw":"---\ntitle: hexo博客添加七牛图片，实现高速加载\ndate:  2016-11-01 19:45:41\ncategories:\n- hexo\n- blog\n\ntags:\n- 学习总结\n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink: \n---\n# 用七牛云存储加载博客图片\n[七牛](http://www.qiniu.com)\n<!-- more -->\n# 注册七牛网站\n\n\n---\n\n","slug":"hexo主题添加七牛图片","published":1,"updated":"2016-11-04T10:59:57.838Z","layout":"post","photos":[],"link":"","_id":"civ3o6v900001f027iwr1rv9o","content":"<h1 id=\"用七牛云存储加载博客图片\"><a href=\"#用七牛云存储加载博客图片\" class=\"headerlink\" title=\"用七牛云存储加载博客图片\"></a>用七牛云存储加载博客图片</h1><p><a href=\"http://www.qiniu.com\" target=\"_blank\" rel=\"external\">七牛</a><br><a id=\"more\"></a></p>\n<h1 id=\"注册七牛网站\"><a href=\"#注册七牛网站\" class=\"headerlink\" title=\"注册七牛网站\"></a>注册七牛网站</h1><hr>\n","excerpt":"<h1 id=\"用七牛云存储加载博客图片\"><a href=\"#用七牛云存储加载博客图片\" class=\"headerlink\" title=\"用七牛云存储加载博客图片\"></a>用七牛云存储加载博客图片</h1><p><a href=\"http://www.qiniu.com\">七牛</a><br>","more":"</p>\n<h1 id=\"注册七牛网站\"><a href=\"#注册七牛网站\" class=\"headerlink\" title=\"注册七牛网站\"></a>注册七牛网站</h1><hr>"},{"title":"hexo 使用前git的简单配置","date":"2016-04-15T10:58:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"**hexo创建中git命令简单操作** <!-- more -->\n    这些命令都在 git bash 完成 \n# 装完git后需要配置自己的github仓库的地址\n    $ git config --global user.name  \"这里填写自己github账号的名字\" + 回车  \n\t$ git config --global user.email \"这里填写注册时所用的邮箱\" + 回车   example : 12345678@qq.com\n# 检查电脑本地是否存在 SSH key\n    $ ~/.ssh   提示No such file or directory 说明你是第一次使用git   一般还没配置都没有 \n\t$ ssh-keygen -T rsa -C \"自己github的邮箱\"  + 回车\n\t            会提示你是否需要输入一个密码来加密，以保证被提交到github上的命令是自己提交的\n\t\t\t\t建议使用密码 \n\t\t\t\t在本地 C:\\Users\\用户名\\.ssh 文件夹\n\t\t\t\t   里面包含私匙  id_rsa\n\t\t\t\t          公匙  id_rsa.pub\n# 提交公匙到github\n     1. 登录github网站 ---> 右上角点击自己的账号名 ---> setting  ---> SSH and   GPG keys  ---> 右上角 New SSH key\t\n \t2. 用比如notepad++ 或者sublime text 工具打开 id_rsa.pub  Ctrl+A ---> Ctrl + C     ---> Ctrl +V 填入网页的key 栏 Title自己随便写\n \t3. Add SSH key \n# 检查是否匹配\n    $ ssh -T git@github.com   \n      Warning: Permanently added the RSA host key for IP address '192.30.252.130' to the list of known hosts.\n      Enter passphrase for key '/c/Users/RoyalBloodSky/.ssh/id_rsa':\n      Hi ***! You've successfully authenticated, but GitHub does not provide shell access.\n      如有上述提示，恭喜你匹配成功！\n**你又离成功近了一步！**\n\t\n\t\t\t\n\t                \n\t        \n  ","source":"_posts/git操作.md","raw":"---\ntitle: hexo 使用前git的简单配置\ndate:  2016-04-15 18:58:41\ncategories:\n- git\n- hexo\n\ntags:\n- 学习总结\n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink:\n---\n**hexo创建中git命令简单操作** <!-- more -->\n    这些命令都在 git bash 完成 \n# 装完git后需要配置自己的github仓库的地址\n    $ git config --global user.name  \"这里填写自己github账号的名字\" + 回车  \n\t$ git config --global user.email \"这里填写注册时所用的邮箱\" + 回车   example : 12345678@qq.com\n# 检查电脑本地是否存在 SSH key\n    $ ~/.ssh   提示No such file or directory 说明你是第一次使用git   一般还没配置都没有 \n\t$ ssh-keygen -T rsa -C \"自己github的邮箱\"  + 回车\n\t            会提示你是否需要输入一个密码来加密，以保证被提交到github上的命令是自己提交的\n\t\t\t\t建议使用密码 \n\t\t\t\t在本地 C:\\Users\\用户名\\.ssh 文件夹\n\t\t\t\t   里面包含私匙  id_rsa\n\t\t\t\t          公匙  id_rsa.pub\n# 提交公匙到github\n     1. 登录github网站 ---> 右上角点击自己的账号名 ---> setting  ---> SSH and   GPG keys  ---> 右上角 New SSH key\t\n \t2. 用比如notepad++ 或者sublime text 工具打开 id_rsa.pub  Ctrl+A ---> Ctrl + C     ---> Ctrl +V 填入网页的key 栏 Title自己随便写\n \t3. Add SSH key \n# 检查是否匹配\n    $ ssh -T git@github.com   \n      Warning: Permanently added the RSA host key for IP address '192.30.252.130' to the list of known hosts.\n      Enter passphrase for key '/c/Users/RoyalBloodSky/.ssh/id_rsa':\n      Hi ***! You've successfully authenticated, but GitHub does not provide shell access.\n      如有上述提示，恭喜你匹配成功！\n**你又离成功近了一步！**\n\t\n\t\t\t\n\t                \n\t        \n  ","slug":"git操作","published":1,"updated":"2016-04-17T07:02:22.000Z","layout":"post","photos":[],"link":"","_id":"civ3o6v9c0003f027bar1rzpe","content":"<p><strong>hexo创建中git命令简单操作</strong> <a id=\"more\"></a><br>    这些命令都在 git bash 完成 </p>\n<h1 id=\"装完git后需要配置自己的github仓库的地址\"><a href=\"#装完git后需要配置自己的github仓库的地址\" class=\"headerlink\" title=\"装完git后需要配置自己的github仓库的地址\"></a>装完git后需要配置自己的github仓库的地址</h1><pre><code>$ git config --global user.name  &quot;这里填写自己github账号的名字&quot; + 回车  \n$ git config --global user.email &quot;这里填写注册时所用的邮箱&quot; + 回车   example : 12345678@qq.com\n</code></pre><h1 id=\"检查电脑本地是否存在-SSH-key\"><a href=\"#检查电脑本地是否存在-SSH-key\" class=\"headerlink\" title=\"检查电脑本地是否存在 SSH key\"></a>检查电脑本地是否存在 SSH key</h1><pre><code>$ ~/.ssh   提示No such file or directory 说明你是第一次使用git   一般还没配置都没有 \n$ ssh-keygen -T rsa -C &quot;自己github的邮箱&quot;  + 回车\n            会提示你是否需要输入一个密码来加密，以保证被提交到github上的命令是自己提交的\n            建议使用密码 \n            在本地 C:\\Users\\用户名\\.ssh 文件夹\n               里面包含私匙  id_rsa\n                      公匙  id_rsa.pub\n</code></pre><h1 id=\"提交公匙到github\"><a href=\"#提交公匙到github\" class=\"headerlink\" title=\"提交公匙到github\"></a>提交公匙到github</h1><pre><code>1. 登录github网站 ---&gt; 右上角点击自己的账号名 ---&gt; setting  ---&gt; SSH and   GPG keys  ---&gt; 右上角 New SSH key    \n2. 用比如notepad++ 或者sublime text 工具打开 id_rsa.pub  Ctrl+A ---&gt; Ctrl + C     ---&gt; Ctrl +V 填入网页的key 栏 Title自己随便写\n3. Add SSH key \n</code></pre><h1 id=\"检查是否匹配\"><a href=\"#检查是否匹配\" class=\"headerlink\" title=\"检查是否匹配\"></a>检查是否匹配</h1><pre><code>$ ssh -T git@github.com   \n  Warning: Permanently added the RSA host key for IP address &apos;192.30.252.130&apos; to the list of known hosts.\n  Enter passphrase for key &apos;/c/Users/RoyalBloodSky/.ssh/id_rsa&apos;:\n  Hi ***! You&apos;ve successfully authenticated, but GitHub does not provide shell access.\n  如有上述提示，恭喜你匹配成功！\n</code></pre><p><strong>你又离成功近了一步！</strong></p>\n","excerpt":"<p><strong>hexo创建中git命令简单操作</strong>","more":"<br>    这些命令都在 git bash 完成 </p>\n<h1 id=\"装完git后需要配置自己的github仓库的地址\"><a href=\"#装完git后需要配置自己的github仓库的地址\" class=\"headerlink\" title=\"装完git后需要配置自己的github仓库的地址\"></a>装完git后需要配置自己的github仓库的地址</h1><pre><code>$ git config --global user.name  &quot;这里填写自己github账号的名字&quot; + 回车  \n$ git config --global user.email &quot;这里填写注册时所用的邮箱&quot; + 回车   example : 12345678@qq.com\n</code></pre><h1 id=\"检查电脑本地是否存在-SSH-key\"><a href=\"#检查电脑本地是否存在-SSH-key\" class=\"headerlink\" title=\"检查电脑本地是否存在 SSH key\"></a>检查电脑本地是否存在 SSH key</h1><pre><code>$ ~/.ssh   提示No such file or directory 说明你是第一次使用git   一般还没配置都没有 \n$ ssh-keygen -T rsa -C &quot;自己github的邮箱&quot;  + 回车\n            会提示你是否需要输入一个密码来加密，以保证被提交到github上的命令是自己提交的\n            建议使用密码 \n            在本地 C:\\Users\\用户名\\.ssh 文件夹\n               里面包含私匙  id_rsa\n                      公匙  id_rsa.pub\n</code></pre><h1 id=\"提交公匙到github\"><a href=\"#提交公匙到github\" class=\"headerlink\" title=\"提交公匙到github\"></a>提交公匙到github</h1><pre><code>1. 登录github网站 ---&gt; 右上角点击自己的账号名 ---&gt; setting  ---&gt; SSH and   GPG keys  ---&gt; 右上角 New SSH key    \n2. 用比如notepad++ 或者sublime text 工具打开 id_rsa.pub  Ctrl+A ---&gt; Ctrl + C     ---&gt; Ctrl +V 填入网页的key 栏 Title自己随便写\n3. Add SSH key \n</code></pre><h1 id=\"检查是否匹配\"><a href=\"#检查是否匹配\" class=\"headerlink\" title=\"检查是否匹配\"></a>检查是否匹配</h1><pre><code>$ ssh -T git@github.com   \n  Warning: Permanently added the RSA host key for IP address &apos;192.30.252.130&apos; to the list of known hosts.\n  Enter passphrase for key &apos;/c/Users/RoyalBloodSky/.ssh/id_rsa&apos;:\n  Hi ***! You&apos;ve successfully authenticated, but GitHub does not provide shell access.\n  如有上述提示，恭喜你匹配成功！\n</code></pre><p><strong>你又离成功近了一步！</strong></p>"},{"title":"学习笔记Java篇--Date类","date":"2016-05-15T05:28:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"** Date类** <!-- more --> \n#   使用 Date 和 SimpleDateFormat 类表示时间\n在程序开发中，经常需要处理日期和时间的相关数据，此时我们可以使用 java.util 包中的 Date 类。这个类最主要的作用就是获取当前时间，我们来看下 Date 类的使用：\n\n     Date d = new Date(); //使用默认的构造方法创建Date对象\n     System.out.println(d); //输出date对象\n\n\n  使用Date类的默认无参构造方法创建出的对象就代表当前时间，我们可以直接输出 Date 对象显示当前的时间，显示的结果如下：\n  \n\tweb Jun 11 09:33:22 CST 2016\n\n\n其中， Wed 代表 Wednesday (星期三)， Jun 代表 June (六月)， 11 代表 11 号， CST 代表 China Standard Time (中国标准时间，也就是北京时间，东八区)。\n\n从上面的输出结果中，我们发现，默认的时间格式不是很友好，与我们日常看到的日期格式不太一样，如果想要按指定的格式进行显示，如 2014-06-11 09:22:30 ，那该怎么做呢？\n\n此时就到了 java.text 包中的 SimpleDateFormat 类大显身手的时候了！！可以使用 SimpleDateFormat 来对日期时间进行格式化，如可以将日期转换为指定格式的文本，也可将文本转换为日期。\n\n# 1. 使用 format() 方法将日期转换为指定格式的文本\n\t//创建date\n\tDate  d= new Date();\n\t//创建SimpledateFormat对象，指定目标格式\n\tSimpleDateFormat sdf=new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n\t//调用format（）方法，格式化时间，转化为格式字符串\n\tString today= sdf.format(d);\n\t//输出转换后的字符串\n\tSystem.out.println(today);\n运行结果：\n \n\t2016-0-11  09:55:48\n\n代码中的 “yyyy-MM-dd HH:mm:ss” 为预定义字符串， yyyy 表示四位年， MM 表示两位月份， dd 表示两位日期， HH 表示小时(使用24小时制)， mm 表示分钟， ss 表示秒，这样就指定了转换的目标格式，最后调用 format() 方法将时间转换为指定的格式的字符串。\n\n   \n\n# 2. 使用 parse() 方法将文本转换为日期\n\t//创建日期格式的字符串，表示当前时间\n\tString day=\"2016年5月21日 10:30:24\";\n\tSimpleDateFormat df= new SimpleDateFormat(\"yyyy年MM月dd日 HH:mm:ss\");\n\tDate date =df.date(day);\n\tSystem.out.println(\"当前时间：\"+date);\n\n代码中的 “yyyy年MM月dd日 HH:mm:ss” 指定了字符串的日期格式，调用 parse() 方法将文本转换为日期。\n \n\n## 一定要注意哦：\n\n### 1、 调用 SimpleDateFormat 对象的 parse() 方法时可能会出现转换异常，即 ParseException ，因此需要进行异常处理\n\n### 2、 使用 Date 类时需要导入 java.util 包，使用 SimpleDateFormat 时需要导入 java.text 包\n实例：\n\n    import java.text.ParseException;\n    import java.text.SimpleDateFormat;\n    import java.util.Date;\n\n    public class HelloWorld {\n    \n      public static void main(String[] args) throws ParseException {\n        \n\t\t// 使用format()方法将日期转换为指定格式的文本\n\t\tSimpleDateFormat sdf1 = new SimpleDateFormat(\"yyyy年MM月dd日 HH时mm分ss秒\");\n\t\tSimpleDateFormat sdf2 = new SimpleDateFormat(\"yyyy/MM/dd HH:mm\");\n\t\tSimpleDateFormat sdf3 = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        \n\t\t// 创建Date对象，表示当前时间\n        Date now= new Date();\n        \n        // 调用format()方法，将日期转换为字符串并输出\n\t\tSystem.out.println(sdf1.format(now));\n\t\tSystem.out.println(sdf2.format(now));\n\t\tSystem.out.println(sdf3.format(now));\n\n\t\t// 使用parse()方法将文本转换为日期\n\t\tString d = \"2016-5-1 21:05:36\";\n\t\tSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        \n         // 调用parse()方法，将字符串转换为日期\n\t\tDate date = sdf.parse(d);\n\t\tSystem.out.println(date);\n\t }\n    }\n\n结果：\t\n\n\t2016年05月11日 02时44分15秒\n\t2016/05/11 02:44\n\t2016-05-11 02:44:15\n\tSun May 01 21:05:36 UTC 2016\n","source":"_posts/java笔记-Date类.md","raw":"---\ntitle: 学习笔记Java篇--Date类\ndate:  2016-05-15 13:28:41\ncategories:\n- Java\n\n\ntags:\n- 学习总结\n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink:\n---\n** Date类** <!-- more --> \n#   使用 Date 和 SimpleDateFormat 类表示时间\n在程序开发中，经常需要处理日期和时间的相关数据，此时我们可以使用 java.util 包中的 Date 类。这个类最主要的作用就是获取当前时间，我们来看下 Date 类的使用：\n\n     Date d = new Date(); //使用默认的构造方法创建Date对象\n     System.out.println(d); //输出date对象\n\n\n  使用Date类的默认无参构造方法创建出的对象就代表当前时间，我们可以直接输出 Date 对象显示当前的时间，显示的结果如下：\n  \n\tweb Jun 11 09:33:22 CST 2016\n\n\n其中， Wed 代表 Wednesday (星期三)， Jun 代表 June (六月)， 11 代表 11 号， CST 代表 China Standard Time (中国标准时间，也就是北京时间，东八区)。\n\n从上面的输出结果中，我们发现，默认的时间格式不是很友好，与我们日常看到的日期格式不太一样，如果想要按指定的格式进行显示，如 2014-06-11 09:22:30 ，那该怎么做呢？\n\n此时就到了 java.text 包中的 SimpleDateFormat 类大显身手的时候了！！可以使用 SimpleDateFormat 来对日期时间进行格式化，如可以将日期转换为指定格式的文本，也可将文本转换为日期。\n\n# 1. 使用 format() 方法将日期转换为指定格式的文本\n\t//创建date\n\tDate  d= new Date();\n\t//创建SimpledateFormat对象，指定目标格式\n\tSimpleDateFormat sdf=new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n\t//调用format（）方法，格式化时间，转化为格式字符串\n\tString today= sdf.format(d);\n\t//输出转换后的字符串\n\tSystem.out.println(today);\n运行结果：\n \n\t2016-0-11  09:55:48\n\n代码中的 “yyyy-MM-dd HH:mm:ss” 为预定义字符串， yyyy 表示四位年， MM 表示两位月份， dd 表示两位日期， HH 表示小时(使用24小时制)， mm 表示分钟， ss 表示秒，这样就指定了转换的目标格式，最后调用 format() 方法将时间转换为指定的格式的字符串。\n\n   \n\n# 2. 使用 parse() 方法将文本转换为日期\n\t//创建日期格式的字符串，表示当前时间\n\tString day=\"2016年5月21日 10:30:24\";\n\tSimpleDateFormat df= new SimpleDateFormat(\"yyyy年MM月dd日 HH:mm:ss\");\n\tDate date =df.date(day);\n\tSystem.out.println(\"当前时间：\"+date);\n\n代码中的 “yyyy年MM月dd日 HH:mm:ss” 指定了字符串的日期格式，调用 parse() 方法将文本转换为日期。\n \n\n## 一定要注意哦：\n\n### 1、 调用 SimpleDateFormat 对象的 parse() 方法时可能会出现转换异常，即 ParseException ，因此需要进行异常处理\n\n### 2、 使用 Date 类时需要导入 java.util 包，使用 SimpleDateFormat 时需要导入 java.text 包\n实例：\n\n    import java.text.ParseException;\n    import java.text.SimpleDateFormat;\n    import java.util.Date;\n\n    public class HelloWorld {\n    \n      public static void main(String[] args) throws ParseException {\n        \n\t\t// 使用format()方法将日期转换为指定格式的文本\n\t\tSimpleDateFormat sdf1 = new SimpleDateFormat(\"yyyy年MM月dd日 HH时mm分ss秒\");\n\t\tSimpleDateFormat sdf2 = new SimpleDateFormat(\"yyyy/MM/dd HH:mm\");\n\t\tSimpleDateFormat sdf3 = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        \n\t\t// 创建Date对象，表示当前时间\n        Date now= new Date();\n        \n        // 调用format()方法，将日期转换为字符串并输出\n\t\tSystem.out.println(sdf1.format(now));\n\t\tSystem.out.println(sdf2.format(now));\n\t\tSystem.out.println(sdf3.format(now));\n\n\t\t// 使用parse()方法将文本转换为日期\n\t\tString d = \"2016-5-1 21:05:36\";\n\t\tSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        \n         // 调用parse()方法，将字符串转换为日期\n\t\tDate date = sdf.parse(d);\n\t\tSystem.out.println(date);\n\t }\n    }\n\n结果：\t\n\n\t2016年05月11日 02时44分15秒\n\t2016/05/11 02:44\n\t2016-05-11 02:44:15\n\tSun May 01 21:05:36 UTC 2016\n","slug":"java笔记-Date类","published":1,"updated":"2016-09-26T08:00:12.449Z","layout":"post","photos":[],"link":"","_id":"civ3o6v9g0005f027nnqe2m09","content":"<p><strong> Date类</strong> <a id=\"more\"></a> </p>\n<h1 id=\"使用-Date-和-SimpleDateFormat-类表示时间\"><a href=\"#使用-Date-和-SimpleDateFormat-类表示时间\" class=\"headerlink\" title=\"使用 Date 和 SimpleDateFormat 类表示时间\"></a>使用 Date 和 SimpleDateFormat 类表示时间</h1><p>在程序开发中，经常需要处理日期和时间的相关数据，此时我们可以使用 java.util 包中的 Date 类。这个类最主要的作用就是获取当前时间，我们来看下 Date 类的使用：</p>\n<pre><code>Date d = new Date(); //使用默认的构造方法创建Date对象\nSystem.out.println(d); //输出date对象\n</code></pre><p>  使用Date类的默认无参构造方法创建出的对象就代表当前时间，我们可以直接输出 Date 对象显示当前的时间，显示的结果如下：</p>\n<pre><code>web Jun 11 09:33:22 CST 2016\n</code></pre><p>其中， Wed 代表 Wednesday (星期三)， Jun 代表 June (六月)， 11 代表 11 号， CST 代表 China Standard Time (中国标准时间，也就是北京时间，东八区)。</p>\n<p>从上面的输出结果中，我们发现，默认的时间格式不是很友好，与我们日常看到的日期格式不太一样，如果想要按指定的格式进行显示，如 2014-06-11 09:22:30 ，那该怎么做呢？</p>\n<p>此时就到了 java.text 包中的 SimpleDateFormat 类大显身手的时候了！！可以使用 SimpleDateFormat 来对日期时间进行格式化，如可以将日期转换为指定格式的文本，也可将文本转换为日期。</p>\n<h1 id=\"1-使用-format-方法将日期转换为指定格式的文本\"><a href=\"#1-使用-format-方法将日期转换为指定格式的文本\" class=\"headerlink\" title=\"1. 使用 format() 方法将日期转换为指定格式的文本\"></a>1. 使用 format() 方法将日期转换为指定格式的文本</h1><pre><code>//创建date\nDate  d= new Date();\n//创建SimpledateFormat对象，指定目标格式\nSimpleDateFormat sdf=new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);\n//调用format（）方法，格式化时间，转化为格式字符串\nString today= sdf.format(d);\n//输出转换后的字符串\nSystem.out.println(today);\n</code></pre><p>运行结果：</p>\n<pre><code>2016-0-11  09:55:48\n</code></pre><p>代码中的 “yyyy-MM-dd HH:mm:ss” 为预定义字符串， yyyy 表示四位年， MM 表示两位月份， dd 表示两位日期， HH 表示小时(使用24小时制)， mm 表示分钟， ss 表示秒，这样就指定了转换的目标格式，最后调用 format() 方法将时间转换为指定的格式的字符串。</p>\n<h1 id=\"2-使用-parse-方法将文本转换为日期\"><a href=\"#2-使用-parse-方法将文本转换为日期\" class=\"headerlink\" title=\"2. 使用 parse() 方法将文本转换为日期\"></a>2. 使用 parse() 方法将文本转换为日期</h1><pre><code>//创建日期格式的字符串，表示当前时间\nString day=&quot;2016年5月21日 10:30:24&quot;;\nSimpleDateFormat df= new SimpleDateFormat(&quot;yyyy年MM月dd日 HH:mm:ss&quot;);\nDate date =df.date(day);\nSystem.out.println(&quot;当前时间：&quot;+date);\n</code></pre><p>代码中的 “yyyy年MM月dd日 HH:mm:ss” 指定了字符串的日期格式，调用 parse() 方法将文本转换为日期。</p>\n<h2 id=\"一定要注意哦：\"><a href=\"#一定要注意哦：\" class=\"headerlink\" title=\"一定要注意哦：\"></a>一定要注意哦：</h2><h3 id=\"1、-调用-SimpleDateFormat-对象的-parse-方法时可能会出现转换异常，即-ParseException-，因此需要进行异常处理\"><a href=\"#1、-调用-SimpleDateFormat-对象的-parse-方法时可能会出现转换异常，即-ParseException-，因此需要进行异常处理\" class=\"headerlink\" title=\"1、 调用 SimpleDateFormat 对象的 parse() 方法时可能会出现转换异常，即 ParseException ，因此需要进行异常处理\"></a>1、 调用 SimpleDateFormat 对象的 parse() 方法时可能会出现转换异常，即 ParseException ，因此需要进行异常处理</h3><h3 id=\"2、-使用-Date-类时需要导入-java-util-包，使用-SimpleDateFormat-时需要导入-java-text-包\"><a href=\"#2、-使用-Date-类时需要导入-java-util-包，使用-SimpleDateFormat-时需要导入-java-text-包\" class=\"headerlink\" title=\"2、 使用 Date 类时需要导入 java.util 包，使用 SimpleDateFormat 时需要导入 java.text 包\"></a>2、 使用 Date 类时需要导入 java.util 包，使用 SimpleDateFormat 时需要导入 java.text 包</h3><p>实例：</p>\n<pre><code>import java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\npublic class HelloWorld {\n\n  public static void main(String[] args) throws ParseException {\n\n    // 使用format()方法将日期转换为指定格式的文本\n    SimpleDateFormat sdf1 = new SimpleDateFormat(&quot;yyyy年MM月dd日 HH时mm分ss秒&quot;);\n    SimpleDateFormat sdf2 = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm&quot;);\n    SimpleDateFormat sdf3 = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);\n\n    // 创建Date对象，表示当前时间\n    Date now= new Date();\n\n    // 调用format()方法，将日期转换为字符串并输出\n    System.out.println(sdf1.format(now));\n    System.out.println(sdf2.format(now));\n    System.out.println(sdf3.format(now));\n\n    // 使用parse()方法将文本转换为日期\n    String d = &quot;2016-5-1 21:05:36&quot;;\n    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);\n\n     // 调用parse()方法，将字符串转换为日期\n    Date date = sdf.parse(d);\n    System.out.println(date);\n }\n}\n</code></pre><p>结果：    </p>\n<pre><code>2016年05月11日 02时44分15秒\n2016/05/11 02:44\n2016-05-11 02:44:15\nSun May 01 21:05:36 UTC 2016\n</code></pre>","excerpt":"<p><strong> Date类</strong>","more":"</p>\n<h1 id=\"使用-Date-和-SimpleDateFormat-类表示时间\"><a href=\"#使用-Date-和-SimpleDateFormat-类表示时间\" class=\"headerlink\" title=\"使用 Date 和 SimpleDateFormat 类表示时间\"></a>使用 Date 和 SimpleDateFormat 类表示时间</h1><p>在程序开发中，经常需要处理日期和时间的相关数据，此时我们可以使用 java.util 包中的 Date 类。这个类最主要的作用就是获取当前时间，我们来看下 Date 类的使用：</p>\n<pre><code>Date d = new Date(); //使用默认的构造方法创建Date对象\nSystem.out.println(d); //输出date对象\n</code></pre><p>  使用Date类的默认无参构造方法创建出的对象就代表当前时间，我们可以直接输出 Date 对象显示当前的时间，显示的结果如下：</p>\n<pre><code>web Jun 11 09:33:22 CST 2016\n</code></pre><p>其中， Wed 代表 Wednesday (星期三)， Jun 代表 June (六月)， 11 代表 11 号， CST 代表 China Standard Time (中国标准时间，也就是北京时间，东八区)。</p>\n<p>从上面的输出结果中，我们发现，默认的时间格式不是很友好，与我们日常看到的日期格式不太一样，如果想要按指定的格式进行显示，如 2014-06-11 09:22:30 ，那该怎么做呢？</p>\n<p>此时就到了 java.text 包中的 SimpleDateFormat 类大显身手的时候了！！可以使用 SimpleDateFormat 来对日期时间进行格式化，如可以将日期转换为指定格式的文本，也可将文本转换为日期。</p>\n<h1 id=\"1-使用-format-方法将日期转换为指定格式的文本\"><a href=\"#1-使用-format-方法将日期转换为指定格式的文本\" class=\"headerlink\" title=\"1. 使用 format() 方法将日期转换为指定格式的文本\"></a>1. 使用 format() 方法将日期转换为指定格式的文本</h1><pre><code>//创建date\nDate  d= new Date();\n//创建SimpledateFormat对象，指定目标格式\nSimpleDateFormat sdf=new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);\n//调用format（）方法，格式化时间，转化为格式字符串\nString today= sdf.format(d);\n//输出转换后的字符串\nSystem.out.println(today);\n</code></pre><p>运行结果：</p>\n<pre><code>2016-0-11  09:55:48\n</code></pre><p>代码中的 “yyyy-MM-dd HH:mm:ss” 为预定义字符串， yyyy 表示四位年， MM 表示两位月份， dd 表示两位日期， HH 表示小时(使用24小时制)， mm 表示分钟， ss 表示秒，这样就指定了转换的目标格式，最后调用 format() 方法将时间转换为指定的格式的字符串。</p>\n<h1 id=\"2-使用-parse-方法将文本转换为日期\"><a href=\"#2-使用-parse-方法将文本转换为日期\" class=\"headerlink\" title=\"2. 使用 parse() 方法将文本转换为日期\"></a>2. 使用 parse() 方法将文本转换为日期</h1><pre><code>//创建日期格式的字符串，表示当前时间\nString day=&quot;2016年5月21日 10:30:24&quot;;\nSimpleDateFormat df= new SimpleDateFormat(&quot;yyyy年MM月dd日 HH:mm:ss&quot;);\nDate date =df.date(day);\nSystem.out.println(&quot;当前时间：&quot;+date);\n</code></pre><p>代码中的 “yyyy年MM月dd日 HH:mm:ss” 指定了字符串的日期格式，调用 parse() 方法将文本转换为日期。</p>\n<h2 id=\"一定要注意哦：\"><a href=\"#一定要注意哦：\" class=\"headerlink\" title=\"一定要注意哦：\"></a>一定要注意哦：</h2><h3 id=\"1、-调用-SimpleDateFormat-对象的-parse-方法时可能会出现转换异常，即-ParseException-，因此需要进行异常处理\"><a href=\"#1、-调用-SimpleDateFormat-对象的-parse-方法时可能会出现转换异常，即-ParseException-，因此需要进行异常处理\" class=\"headerlink\" title=\"1、 调用 SimpleDateFormat 对象的 parse() 方法时可能会出现转换异常，即 ParseException ，因此需要进行异常处理\"></a>1、 调用 SimpleDateFormat 对象的 parse() 方法时可能会出现转换异常，即 ParseException ，因此需要进行异常处理</h3><h3 id=\"2、-使用-Date-类时需要导入-java-util-包，使用-SimpleDateFormat-时需要导入-java-text-包\"><a href=\"#2、-使用-Date-类时需要导入-java-util-包，使用-SimpleDateFormat-时需要导入-java-text-包\" class=\"headerlink\" title=\"2、 使用 Date 类时需要导入 java.util 包，使用 SimpleDateFormat 时需要导入 java.text 包\"></a>2、 使用 Date 类时需要导入 java.util 包，使用 SimpleDateFormat 时需要导入 java.text 包</h3><p>实例：</p>\n<pre><code>import java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\npublic class HelloWorld {\n\n  public static void main(String[] args) throws ParseException {\n\n    // 使用format()方法将日期转换为指定格式的文本\n    SimpleDateFormat sdf1 = new SimpleDateFormat(&quot;yyyy年MM月dd日 HH时mm分ss秒&quot;);\n    SimpleDateFormat sdf2 = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm&quot;);\n    SimpleDateFormat sdf3 = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);\n\n    // 创建Date对象，表示当前时间\n    Date now= new Date();\n\n    // 调用format()方法，将日期转换为字符串并输出\n    System.out.println(sdf1.format(now));\n    System.out.println(sdf2.format(now));\n    System.out.println(sdf3.format(now));\n\n    // 使用parse()方法将文本转换为日期\n    String d = &quot;2016-5-1 21:05:36&quot;;\n    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);\n\n     // 调用parse()方法，将字符串转换为日期\n    Date date = sdf.parse(d);\n    System.out.println(date);\n }\n}\n</code></pre><p>结果：    </p>\n<pre><code>2016年05月11日 02时44分15秒\n2016/05/11 02:44\n2016-05-11 02:44:15\nSun May 01 21:05:36 UTC 2016\n</code></pre>"},{"title":"学习笔记Java篇--修饰符","date":"2016-05-17T05:28:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"** 修饰符 ** <!-- more -->\n# 成员内部类的使用方法：\n    1、 Inner 类定义在 Outer 类的内部，相当于 Outer 类的一个成员变量的位置，\n      Inner 类可以使用任意访问控制符，如 public 、 protected 、 private 等\n\n    2、  Inner 类中定义的 test() 方法可以直接访问 Outer 类中的数据，\n     而不受访问控制符的影响，如直接访问 Outer 类中的私有属性a\n\n    3、 定义了成员内部类后，必须使用外部类对象来创建内部类对象，\n     而不能直接去 new 一个内部类对象，即：内部类 对象名 = 外部类对象.new 内部类( );\n\n    4、 编译上面的程序后，会发现产生了两个 .class 文件\n     Outer$Inner.class    这是内部类的.class文件  \n     Outer.class          外部类的.class文件\n     成员内部类的 .class 文件总是这样：外部类名$内部类名.class\n\n    外部类是不能直接使用内部类的成员和方法的\n    可先创建内部类的对象，然后通过内部类的对象来访问其成员变量和方法。\n\n    2、 如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，\n     如果要访问外部类的成员变量，可以使用 this 关键字。\n\n# JAVA 中的静态内部类\t \n    静态内部类是 static 修饰的内部类，这种内部类的特点是：\n    1、\n\t 静态内部类不能直接访问外部类的非静态成员，但可以通过 new 外部类().成员 的方式访问 \n\n    2、\n     如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；\n\t 如果外部类的静态成员与内部类的成员名称不相同，则可通过“成员名”直接调用外部类的静态成员\n\n    3、\n\t创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名= new 内部类();\n\t  \n\t  \n\t  \n外部类\n\n    public class HelloWorld {\n    // 外部类中的静态变量score\n    private static int score = 84;\n    \n    // 创建静态内部类\n\tpublic  static class SInner {\n        // 内部类中的变量score\n        int score = 91;\n        \n\t\tpublic void show() {\n\t\t\tSystem.out.println(\"访问外部类中的score：\" +   HelloWorld.score  );\n\t\t\tSystem.out.println(\"访问内部类中的score：\" + score);\n\t\t}\n\t}\n\n 测试静态内部类\n \n\tpublic static void main(String[] args) {\n\t\t// 直接创建内部类的对象\n        \n        SInner si=new SInner();\n        // 调用show方法\n\t\tsi.show();\n\t}\n    }\n结果：\n\n    访问外部类中的score：84\n    访问内部类中的score：91\n\t\t   \n\t\t   \n# Java 中的方法内部类\n     方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，\n\t       即只在该方法内可以使用。\n\t\t   一定要注意哦：由于方法内部类不能在外部类的方法以外的地方使用，\n\t\t   因此方法内部类不能使用访问控制符和 static 修饰符。\n\t\t   \n\t\t   //外部类\n    public class HelloWorld {\n    \n    private String name = \"学习笔记之java篇\";\n    \n    // 外部类中的show方法\n    public void show() { \n\t\t// 定义方法内部类\n\t\tclass MInner {\n\t\t\tint score = 83;\n\t\t\tpublic int getScore() {\n\t\t\t\treturn score + 10;\n\t\t\t}\n\t\t}\n        \n\t\t// 创建方法内部类的对象\n        MInner mi=new MInner();\n        \n        // 调用内部类的方法\n\tint\tnewScore=mi.getScore();\n        \n\t\tSystem.out.println(\"姓名：\" + name + \"\\n加分后的成绩：\" + newScore);\n\t}\n    \n\t// 测试方法内部类\n\tpublic static void main(String[] args) {\n        \n\t\t// 创建外部类的对象\n        HelloWorld hw=new HelloWorld();\n        \n        // 调用外部类的方法\n\t\thw.show();\n\t}\n    }                      \n结果：\n\n    姓名：学习笔记之java篇\n          加分后的成绩：93\n\t\t\t\t\t\t\t \n","source":"_posts/Java笔记-修饰符.md","raw":"---\ntitle: 学习笔记Java篇--修饰符\ndate:  2016-05-17 13:28:41\ncategories:\n- Java\n\n\ntags:\n- 学习总结\n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink:\n---\n** 修饰符 ** <!-- more -->\n# 成员内部类的使用方法：\n    1、 Inner 类定义在 Outer 类的内部，相当于 Outer 类的一个成员变量的位置，\n      Inner 类可以使用任意访问控制符，如 public 、 protected 、 private 等\n\n    2、  Inner 类中定义的 test() 方法可以直接访问 Outer 类中的数据，\n     而不受访问控制符的影响，如直接访问 Outer 类中的私有属性a\n\n    3、 定义了成员内部类后，必须使用外部类对象来创建内部类对象，\n     而不能直接去 new 一个内部类对象，即：内部类 对象名 = 外部类对象.new 内部类( );\n\n    4、 编译上面的程序后，会发现产生了两个 .class 文件\n     Outer$Inner.class    这是内部类的.class文件  \n     Outer.class          外部类的.class文件\n     成员内部类的 .class 文件总是这样：外部类名$内部类名.class\n\n    外部类是不能直接使用内部类的成员和方法的\n    可先创建内部类的对象，然后通过内部类的对象来访问其成员变量和方法。\n\n    2、 如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，\n     如果要访问外部类的成员变量，可以使用 this 关键字。\n\n# JAVA 中的静态内部类\t \n    静态内部类是 static 修饰的内部类，这种内部类的特点是：\n    1、\n\t 静态内部类不能直接访问外部类的非静态成员，但可以通过 new 外部类().成员 的方式访问 \n\n    2、\n     如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；\n\t 如果外部类的静态成员与内部类的成员名称不相同，则可通过“成员名”直接调用外部类的静态成员\n\n    3、\n\t创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名= new 内部类();\n\t  \n\t  \n\t  \n外部类\n\n    public class HelloWorld {\n    // 外部类中的静态变量score\n    private static int score = 84;\n    \n    // 创建静态内部类\n\tpublic  static class SInner {\n        // 内部类中的变量score\n        int score = 91;\n        \n\t\tpublic void show() {\n\t\t\tSystem.out.println(\"访问外部类中的score：\" +   HelloWorld.score  );\n\t\t\tSystem.out.println(\"访问内部类中的score：\" + score);\n\t\t}\n\t}\n\n 测试静态内部类\n \n\tpublic static void main(String[] args) {\n\t\t// 直接创建内部类的对象\n        \n        SInner si=new SInner();\n        // 调用show方法\n\t\tsi.show();\n\t}\n    }\n结果：\n\n    访问外部类中的score：84\n    访问内部类中的score：91\n\t\t   \n\t\t   \n# Java 中的方法内部类\n     方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，\n\t       即只在该方法内可以使用。\n\t\t   一定要注意哦：由于方法内部类不能在外部类的方法以外的地方使用，\n\t\t   因此方法内部类不能使用访问控制符和 static 修饰符。\n\t\t   \n\t\t   //外部类\n    public class HelloWorld {\n    \n    private String name = \"学习笔记之java篇\";\n    \n    // 外部类中的show方法\n    public void show() { \n\t\t// 定义方法内部类\n\t\tclass MInner {\n\t\t\tint score = 83;\n\t\t\tpublic int getScore() {\n\t\t\t\treturn score + 10;\n\t\t\t}\n\t\t}\n        \n\t\t// 创建方法内部类的对象\n        MInner mi=new MInner();\n        \n        // 调用内部类的方法\n\tint\tnewScore=mi.getScore();\n        \n\t\tSystem.out.println(\"姓名：\" + name + \"\\n加分后的成绩：\" + newScore);\n\t}\n    \n\t// 测试方法内部类\n\tpublic static void main(String[] args) {\n        \n\t\t// 创建外部类的对象\n        HelloWorld hw=new HelloWorld();\n        \n        // 调用外部类的方法\n\t\thw.show();\n\t}\n    }                      \n结果：\n\n    姓名：学习笔记之java篇\n          加分后的成绩：93\n\t\t\t\t\t\t\t \n","slug":"Java笔记-修饰符","published":1,"updated":"2016-09-26T07:59:26.139Z","layout":"post","photos":[],"link":"","_id":"civ3o6v9m0006f027ph4ehbje","content":"<p><strong> 修饰符 </strong> <a id=\"more\"></a></p>\n<h1 id=\"成员内部类的使用方法：\"><a href=\"#成员内部类的使用方法：\" class=\"headerlink\" title=\"成员内部类的使用方法：\"></a>成员内部类的使用方法：</h1><pre><code>1、 Inner 类定义在 Outer 类的内部，相当于 Outer 类的一个成员变量的位置，\n  Inner 类可以使用任意访问控制符，如 public 、 protected 、 private 等\n\n2、  Inner 类中定义的 test() 方法可以直接访问 Outer 类中的数据，\n 而不受访问控制符的影响，如直接访问 Outer 类中的私有属性a\n\n3、 定义了成员内部类后，必须使用外部类对象来创建内部类对象，\n 而不能直接去 new 一个内部类对象，即：内部类 对象名 = 外部类对象.new 内部类( );\n\n4、 编译上面的程序后，会发现产生了两个 .class 文件\n Outer$Inner.class    这是内部类的.class文件  \n Outer.class          外部类的.class文件\n 成员内部类的 .class 文件总是这样：外部类名$内部类名.class\n\n外部类是不能直接使用内部类的成员和方法的\n可先创建内部类的对象，然后通过内部类的对象来访问其成员变量和方法。\n\n2、 如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，\n 如果要访问外部类的成员变量，可以使用 this 关键字。\n</code></pre><h1 id=\"JAVA-中的静态内部类\"><a href=\"#JAVA-中的静态内部类\" class=\"headerlink\" title=\"JAVA 中的静态内部类\"></a>JAVA 中的静态内部类</h1><pre><code>静态内部类是 static 修饰的内部类，这种内部类的特点是：\n1、\n 静态内部类不能直接访问外部类的非静态成员，但可以通过 new 外部类().成员 的方式访问 \n\n2、\n 如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；\n 如果外部类的静态成员与内部类的成员名称不相同，则可通过“成员名”直接调用外部类的静态成员\n\n3、\n创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名= new 内部类();\n</code></pre><p>外部类</p>\n<pre><code>public class HelloWorld {\n// 外部类中的静态变量score\nprivate static int score = 84;\n\n// 创建静态内部类\npublic  static class SInner {\n    // 内部类中的变量score\n    int score = 91;\n\n    public void show() {\n        System.out.println(&quot;访问外部类中的score：&quot; +   HelloWorld.score  );\n        System.out.println(&quot;访问内部类中的score：&quot; + score);\n    }\n}\n</code></pre><p> 测试静态内部类</p>\n<pre><code>public static void main(String[] args) {\n    // 直接创建内部类的对象\n\n    SInner si=new SInner();\n    // 调用show方法\n    si.show();\n}\n}\n</code></pre><p>结果：</p>\n<pre><code>访问外部类中的score：84\n访问内部类中的score：91\n</code></pre><h1 id=\"Java-中的方法内部类\"><a href=\"#Java-中的方法内部类\" class=\"headerlink\" title=\"Java 中的方法内部类\"></a>Java 中的方法内部类</h1><pre><code> 方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，\n       即只在该方法内可以使用。\n       一定要注意哦：由于方法内部类不能在外部类的方法以外的地方使用，\n       因此方法内部类不能使用访问控制符和 static 修饰符。\n\n       //外部类\npublic class HelloWorld {\n\nprivate String name = &quot;学习笔记之java篇&quot;;\n\n// 外部类中的show方法\npublic void show() { \n    // 定义方法内部类\n    class MInner {\n        int score = 83;\n        public int getScore() {\n            return score + 10;\n        }\n    }\n\n    // 创建方法内部类的对象\n    MInner mi=new MInner();\n\n    // 调用内部类的方法\nint    newScore=mi.getScore();\n\n    System.out.println(&quot;姓名：&quot; + name + &quot;\\n加分后的成绩：&quot; + newScore);\n}\n\n// 测试方法内部类\npublic static void main(String[] args) {\n\n    // 创建外部类的对象\n    HelloWorld hw=new HelloWorld();\n\n    // 调用外部类的方法\n    hw.show();\n}\n}                      \n</code></pre><p>结果：</p>\n<pre><code>姓名：学习笔记之java篇\n      加分后的成绩：93\n</code></pre>","excerpt":"<p><strong> 修饰符 </strong>","more":"</p>\n<h1 id=\"成员内部类的使用方法：\"><a href=\"#成员内部类的使用方法：\" class=\"headerlink\" title=\"成员内部类的使用方法：\"></a>成员内部类的使用方法：</h1><pre><code>1、 Inner 类定义在 Outer 类的内部，相当于 Outer 类的一个成员变量的位置，\n  Inner 类可以使用任意访问控制符，如 public 、 protected 、 private 等\n\n2、  Inner 类中定义的 test() 方法可以直接访问 Outer 类中的数据，\n 而不受访问控制符的影响，如直接访问 Outer 类中的私有属性a\n\n3、 定义了成员内部类后，必须使用外部类对象来创建内部类对象，\n 而不能直接去 new 一个内部类对象，即：内部类 对象名 = 外部类对象.new 内部类( );\n\n4、 编译上面的程序后，会发现产生了两个 .class 文件\n Outer$Inner.class    这是内部类的.class文件  \n Outer.class          外部类的.class文件\n 成员内部类的 .class 文件总是这样：外部类名$内部类名.class\n\n外部类是不能直接使用内部类的成员和方法的\n可先创建内部类的对象，然后通过内部类的对象来访问其成员变量和方法。\n\n2、 如果外部类和内部类具有相同的成员变量或方法，内部类默认访问自己的成员变量或方法，\n 如果要访问外部类的成员变量，可以使用 this 关键字。\n</code></pre><h1 id=\"JAVA-中的静态内部类\"><a href=\"#JAVA-中的静态内部类\" class=\"headerlink\" title=\"JAVA 中的静态内部类\"></a>JAVA 中的静态内部类</h1><pre><code>静态内部类是 static 修饰的内部类，这种内部类的特点是：\n1、\n 静态内部类不能直接访问外部类的非静态成员，但可以通过 new 外部类().成员 的方式访问 \n\n2、\n 如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；\n 如果外部类的静态成员与内部类的成员名称不相同，则可通过“成员名”直接调用外部类的静态成员\n\n3、\n创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名= new 内部类();\n</code></pre><p>外部类</p>\n<pre><code>public class HelloWorld {\n// 外部类中的静态变量score\nprivate static int score = 84;\n\n// 创建静态内部类\npublic  static class SInner {\n    // 内部类中的变量score\n    int score = 91;\n\n    public void show() {\n        System.out.println(&quot;访问外部类中的score：&quot; +   HelloWorld.score  );\n        System.out.println(&quot;访问内部类中的score：&quot; + score);\n    }\n}\n</code></pre><p> 测试静态内部类</p>\n<pre><code>public static void main(String[] args) {\n    // 直接创建内部类的对象\n\n    SInner si=new SInner();\n    // 调用show方法\n    si.show();\n}\n}\n</code></pre><p>结果：</p>\n<pre><code>访问外部类中的score：84\n访问内部类中的score：91\n</code></pre><h1 id=\"Java-中的方法内部类\"><a href=\"#Java-中的方法内部类\" class=\"headerlink\" title=\"Java 中的方法内部类\"></a>Java 中的方法内部类</h1><pre><code> 方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，\n       即只在该方法内可以使用。\n       一定要注意哦：由于方法内部类不能在外部类的方法以外的地方使用，\n       因此方法内部类不能使用访问控制符和 static 修饰符。\n\n       //外部类\npublic class HelloWorld {\n\nprivate String name = &quot;学习笔记之java篇&quot;;\n\n// 外部类中的show方法\npublic void show() { \n    // 定义方法内部类\n    class MInner {\n        int score = 83;\n        public int getScore() {\n            return score + 10;\n        }\n    }\n\n    // 创建方法内部类的对象\n    MInner mi=new MInner();\n\n    // 调用内部类的方法\nint    newScore=mi.getScore();\n\n    System.out.println(&quot;姓名：&quot; + name + &quot;\\n加分后的成绩：&quot; + newScore);\n}\n\n// 测试方法内部类\npublic static void main(String[] args) {\n\n    // 创建外部类的对象\n    HelloWorld hw=new HelloWorld();\n\n    // 调用外部类的方法\n    hw.show();\n}\n}                      \n</code></pre><p>结果：</p>\n<pre><code>姓名：学习笔记之java篇\n      加分后的成绩：93\n</code></pre>"},{"title":"学习笔记Java篇--字符串","date":"2016-05-11T11:58:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"** 字符串 ** <!-- more -->\n#  使用StringBuilder或StringBuffer               \t就可以避免这个问题。至于 StringBuilder  和StringBuffer ，它们基本相似，不同之处，StringBuffer 是线程安全的，而 StringBuilder 则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用 StringBuilder 类。\n\n那么如何定义 StringBuilder 类的对象呢？ 我们来看下面的代码：\n\n    StringBuilder str = new StringBuilder(\"hello\");\n    str.append(\"MuDeBin\");//在str字符串尾部追加MuDeBin\n    str.append(520);\n    str.insert(11,\"!\");//在第十一个字符后加入 ！字符\n\n    public class world{\n\tpublic static void main(String [] args){\n\t\tStringBuilder str=new StringBuilder();\n\t\tstr.append(\"jasdfhasjdksfhsdjfsj\");\n\t\tfor(int i=str.length()-3;i>=3;i=i-3){\n\t\t\tstr.insert(i,\",\");\n\t\t}\n\t\tSystem.out.println(str.toString());\n\t}\n\n    }\n\n# Java 中基本类型和包装类之间的转换\n## 基本类型和包装类之间经常需要互相转换，以    Integer 为例（其他几个包装类的操作雷同哦）：\n    Integer a=new Integer(3);//定义Integer包装类对象，\n    int b=a+3; //将对象和基本类型进行运算；\n\n\n### 在 JDK1.5   引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。\n\n那什么是装箱和拆箱呢？我们分别来看下\n\n装箱：把基本类型转换成包装类，使其具有对象的性质，又可分为手动装箱和自动装箱\n\n    int i =10; //定义 一个基本类型值\n    Integer x=new Integer(i);//手动装箱\n    Integer y=i;  //自动装箱\n\n\n拆箱：和装箱相反，把包装类对象转换成基本类型的值，又可分为手动拆箱和自动拆箱\n\n    Integer j= new Integer(8);\n    int m = j.intValue();//手动拆箱\n    int n = j; //自动拆箱为int型\n\n\n\n在程序开发中，我们经常需要在基本数据类型和字符串之间进行转换。\n\n其中，基本类型转换为字符串有三种方法：\n\n1. 使用包装类的 toString() 方法\n\n2. 使用String类的 valueOf() 方法\n\n3. \n用一个空字符串加上基本类型，得到的就是基本类型数据对应的字符串\n\n\n\n   \n    //将基本类型转化为字符串\n    int c=10;\n    String str1=Integer.toString(c);//方法一\n    String str2=String.valueOf(c); //方法二\n    String str3=c+\"\"; //方法三\n       \n\n## 再来看，将字符串转换成基本类型有两种方法：\n\n1. 调用包装类的 parseXxx 静态方法\n\n2. 调用包装类的 valueOf() 方法转换为基本类型的包装类，会自动拆箱\n\n\n\t//将字符串转换为基本类型\n\tString str =\"8\";\n\tint d = Integer.parseInt(str);//方法一\n\tint e = Integer.valueOf(str);//方法二\n\nPS：其他基本类型与字符串的相互转化这里不再一一列出，方法都类似\n实例： \n\n    public class HelloWorld {\n    public static void main(String[] args) {\n        \n\t\tdouble m = 78.5;\n\t\t//将基本类型转换为字符串\n\t\tString str1 =m  + \"\" ;\n        //String str1 = String.valueOf(m);\n\t\t//String str1 = String.toString(m);\n\t\tSystem.out.println(\"m 转换为String型后与整数20的求和结果为： \"+(str1+20));\n\t\t\n\t\tString str = \"180.20\";\n\t    // 将字符串转换为基本类型\n\t\tDouble a =  Double.valueOf(str) ;\n\t\t//Double a = Double.parseDouble(str);\n\t\tSystem.out.println(\"str 转换为double型后与整数20的求和结果为： \"+(a+20));\n\t  }\n    }\n结果：\n\n     m 转换为String型后与整数20的求和结果为： 78.520 str转换为double型后与整数20的求和结果为：200.2\n","source":"_posts/java笔记-字符串.md","raw":"---\ntitle: 学习笔记Java篇--字符串\ndate:  2016-05-11 19:58:41\ncategories:\n- Java\n\ntags:\n- 学习总结\n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink:\n---\n** 字符串 ** <!-- more -->\n#  使用StringBuilder或StringBuffer               \t就可以避免这个问题。至于 StringBuilder  和StringBuffer ，它们基本相似，不同之处，StringBuffer 是线程安全的，而 StringBuilder 则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用 StringBuilder 类。\n\n那么如何定义 StringBuilder 类的对象呢？ 我们来看下面的代码：\n\n    StringBuilder str = new StringBuilder(\"hello\");\n    str.append(\"MuDeBin\");//在str字符串尾部追加MuDeBin\n    str.append(520);\n    str.insert(11,\"!\");//在第十一个字符后加入 ！字符\n\n    public class world{\n\tpublic static void main(String [] args){\n\t\tStringBuilder str=new StringBuilder();\n\t\tstr.append(\"jasdfhasjdksfhsdjfsj\");\n\t\tfor(int i=str.length()-3;i>=3;i=i-3){\n\t\t\tstr.insert(i,\",\");\n\t\t}\n\t\tSystem.out.println(str.toString());\n\t}\n\n    }\n\n# Java 中基本类型和包装类之间的转换\n## 基本类型和包装类之间经常需要互相转换，以    Integer 为例（其他几个包装类的操作雷同哦）：\n    Integer a=new Integer(3);//定义Integer包装类对象，\n    int b=a+3; //将对象和基本类型进行运算；\n\n\n### 在 JDK1.5   引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。\n\n那什么是装箱和拆箱呢？我们分别来看下\n\n装箱：把基本类型转换成包装类，使其具有对象的性质，又可分为手动装箱和自动装箱\n\n    int i =10; //定义 一个基本类型值\n    Integer x=new Integer(i);//手动装箱\n    Integer y=i;  //自动装箱\n\n\n拆箱：和装箱相反，把包装类对象转换成基本类型的值，又可分为手动拆箱和自动拆箱\n\n    Integer j= new Integer(8);\n    int m = j.intValue();//手动拆箱\n    int n = j; //自动拆箱为int型\n\n\n\n在程序开发中，我们经常需要在基本数据类型和字符串之间进行转换。\n\n其中，基本类型转换为字符串有三种方法：\n\n1. 使用包装类的 toString() 方法\n\n2. 使用String类的 valueOf() 方法\n\n3. \n用一个空字符串加上基本类型，得到的就是基本类型数据对应的字符串\n\n\n\n   \n    //将基本类型转化为字符串\n    int c=10;\n    String str1=Integer.toString(c);//方法一\n    String str2=String.valueOf(c); //方法二\n    String str3=c+\"\"; //方法三\n       \n\n## 再来看，将字符串转换成基本类型有两种方法：\n\n1. 调用包装类的 parseXxx 静态方法\n\n2. 调用包装类的 valueOf() 方法转换为基本类型的包装类，会自动拆箱\n\n\n\t//将字符串转换为基本类型\n\tString str =\"8\";\n\tint d = Integer.parseInt(str);//方法一\n\tint e = Integer.valueOf(str);//方法二\n\nPS：其他基本类型与字符串的相互转化这里不再一一列出，方法都类似\n实例： \n\n    public class HelloWorld {\n    public static void main(String[] args) {\n        \n\t\tdouble m = 78.5;\n\t\t//将基本类型转换为字符串\n\t\tString str1 =m  + \"\" ;\n        //String str1 = String.valueOf(m);\n\t\t//String str1 = String.toString(m);\n\t\tSystem.out.println(\"m 转换为String型后与整数20的求和结果为： \"+(str1+20));\n\t\t\n\t\tString str = \"180.20\";\n\t    // 将字符串转换为基本类型\n\t\tDouble a =  Double.valueOf(str) ;\n\t\t//Double a = Double.parseDouble(str);\n\t\tSystem.out.println(\"str 转换为double型后与整数20的求和结果为： \"+(a+20));\n\t  }\n    }\n结果：\n\n     m 转换为String型后与整数20的求和结果为： 78.520 str转换为double型后与整数20的求和结果为：200.2\n","slug":"java笔记-字符串","published":1,"updated":"2016-09-26T08:00:00.648Z","layout":"post","photos":[],"link":"","_id":"civ3o6v9r0008f027wax0jswy","content":"<p><strong> 字符串 </strong> <a id=\"more\"></a></p>\n<h1 id=\"使用StringBuilder或StringBuffer-就可以避免这个问题。至于-StringBuilder-和StringBuffer-，它们基本相似，不同之处，StringBuffer-是线程安全的，而-StringBuilder-则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用-StringBuilder-类。\"><a href=\"#使用StringBuilder或StringBuffer-就可以避免这个问题。至于-StringBuilder-和StringBuffer-，它们基本相似，不同之处，StringBuffer-是线程安全的，而-StringBuilder-则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用-StringBuilder-类。\" class=\"headerlink\" title=\"使用StringBuilder或StringBuffer                   就可以避免这个问题。至于 StringBuilder  和StringBuffer ，它们基本相似，不同之处，StringBuffer 是线程安全的，而 StringBuilder 则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用 StringBuilder 类。\"></a>使用StringBuilder或StringBuffer                   就可以避免这个问题。至于 StringBuilder  和StringBuffer ，它们基本相似，不同之处，StringBuffer 是线程安全的，而 StringBuilder 则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用 StringBuilder 类。</h1><p>那么如何定义 StringBuilder 类的对象呢？ 我们来看下面的代码：</p>\n<pre><code>StringBuilder str = new StringBuilder(&quot;hello&quot;);\nstr.append(&quot;MuDeBin&quot;);//在str字符串尾部追加MuDeBin\nstr.append(520);\nstr.insert(11,&quot;!&quot;);//在第十一个字符后加入 ！字符\n\npublic class world{\npublic static void main(String [] args){\n    StringBuilder str=new StringBuilder();\n    str.append(&quot;jasdfhasjdksfhsdjfsj&quot;);\n    for(int i=str.length()-3;i&gt;=3;i=i-3){\n        str.insert(i,&quot;,&quot;);\n    }\n    System.out.println(str.toString());\n}\n\n}\n</code></pre><h1 id=\"Java-中基本类型和包装类之间的转换\"><a href=\"#Java-中基本类型和包装类之间的转换\" class=\"headerlink\" title=\"Java 中基本类型和包装类之间的转换\"></a>Java 中基本类型和包装类之间的转换</h1><h2 id=\"基本类型和包装类之间经常需要互相转换，以-Integer-为例（其他几个包装类的操作雷同哦）：\"><a href=\"#基本类型和包装类之间经常需要互相转换，以-Integer-为例（其他几个包装类的操作雷同哦）：\" class=\"headerlink\" title=\"基本类型和包装类之间经常需要互相转换，以    Integer 为例（其他几个包装类的操作雷同哦）：\"></a>基本类型和包装类之间经常需要互相转换，以    Integer 为例（其他几个包装类的操作雷同哦）：</h2><pre><code>Integer a=new Integer(3);//定义Integer包装类对象，\nint b=a+3; //将对象和基本类型进行运算；\n</code></pre><h3 id=\"在-JDK1-5-引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。\"><a href=\"#在-JDK1-5-引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。\" class=\"headerlink\" title=\"在 JDK1.5   引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。\"></a>在 JDK1.5   引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。</h3><p>那什么是装箱和拆箱呢？我们分别来看下</p>\n<p>装箱：把基本类型转换成包装类，使其具有对象的性质，又可分为手动装箱和自动装箱</p>\n<pre><code>int i =10; //定义 一个基本类型值\nInteger x=new Integer(i);//手动装箱\nInteger y=i;  //自动装箱\n</code></pre><p>拆箱：和装箱相反，把包装类对象转换成基本类型的值，又可分为手动拆箱和自动拆箱</p>\n<pre><code>Integer j= new Integer(8);\nint m = j.intValue();//手动拆箱\nint n = j; //自动拆箱为int型\n</code></pre><p>在程序开发中，我们经常需要在基本数据类型和字符串之间进行转换。</p>\n<p>其中，基本类型转换为字符串有三种方法：</p>\n<ol>\n<li><p>使用包装类的 toString() 方法</p>\n</li>\n<li><p>使用String类的 valueOf() 方法</p>\n</li>\n<li><p>用一个空字符串加上基本类型，得到的就是基本类型数据对应的字符串</p>\n</li>\n</ol>\n<pre><code>//将基本类型转化为字符串\nint c=10;\nString str1=Integer.toString(c);//方法一\nString str2=String.valueOf(c); //方法二\nString str3=c+&quot;&quot;; //方法三\n</code></pre><h2 id=\"再来看，将字符串转换成基本类型有两种方法：\"><a href=\"#再来看，将字符串转换成基本类型有两种方法：\" class=\"headerlink\" title=\"再来看，将字符串转换成基本类型有两种方法：\"></a>再来看，将字符串转换成基本类型有两种方法：</h2><ol>\n<li><p>调用包装类的 parseXxx 静态方法</p>\n</li>\n<li><p>调用包装类的 valueOf() 方法转换为基本类型的包装类，会自动拆箱</p>\n</li>\n</ol>\n<pre><code>//将字符串转换为基本类型\nString str =&quot;8&quot;;\nint d = Integer.parseInt(str);//方法一\nint e = Integer.valueOf(str);//方法二\n</code></pre><p>PS：其他基本类型与字符串的相互转化这里不再一一列出，方法都类似<br>实例： </p>\n<pre><code>public class HelloWorld {\npublic static void main(String[] args) {\n\n    double m = 78.5;\n    //将基本类型转换为字符串\n    String str1 =m  + &quot;&quot; ;\n    //String str1 = String.valueOf(m);\n    //String str1 = String.toString(m);\n    System.out.println(&quot;m 转换为String型后与整数20的求和结果为： &quot;+(str1+20));\n\n    String str = &quot;180.20&quot;;\n    // 将字符串转换为基本类型\n    Double a =  Double.valueOf(str) ;\n    //Double a = Double.parseDouble(str);\n    System.out.println(&quot;str 转换为double型后与整数20的求和结果为： &quot;+(a+20));\n  }\n}\n</code></pre><p>结果：</p>\n<pre><code>m 转换为String型后与整数20的求和结果为： 78.520 str转换为double型后与整数20的求和结果为：200.2\n</code></pre>","excerpt":"<p><strong> 字符串 </strong>","more":"</p>\n<h1 id=\"使用StringBuilder或StringBuffer-就可以避免这个问题。至于-StringBuilder-和StringBuffer-，它们基本相似，不同之处，StringBuffer-是线程安全的，而-StringBuilder-则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用-StringBuilder-类。\"><a href=\"#使用StringBuilder或StringBuffer-就可以避免这个问题。至于-StringBuilder-和StringBuffer-，它们基本相似，不同之处，StringBuffer-是线程安全的，而-StringBuilder-则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用-StringBuilder-类。\" class=\"headerlink\" title=\"使用StringBuilder或StringBuffer                   就可以避免这个问题。至于 StringBuilder  和StringBuffer ，它们基本相似，不同之处，StringBuffer 是线程安全的，而 StringBuilder 则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用 StringBuilder 类。\"></a>使用StringBuilder或StringBuffer                   就可以避免这个问题。至于 StringBuilder  和StringBuffer ，它们基本相似，不同之处，StringBuffer 是线程安全的，而 StringBuilder 则没有实现线程安全功能，所以性能略高。因此一般情况下，如果需要创建一个内容可变的字符串对象，应优先考虑使用 StringBuilder 类。</h1><p>那么如何定义 StringBuilder 类的对象呢？ 我们来看下面的代码：</p>\n<pre><code>StringBuilder str = new StringBuilder(&quot;hello&quot;);\nstr.append(&quot;MuDeBin&quot;);//在str字符串尾部追加MuDeBin\nstr.append(520);\nstr.insert(11,&quot;!&quot;);//在第十一个字符后加入 ！字符\n\npublic class world{\npublic static void main(String [] args){\n    StringBuilder str=new StringBuilder();\n    str.append(&quot;jasdfhasjdksfhsdjfsj&quot;);\n    for(int i=str.length()-3;i&gt;=3;i=i-3){\n        str.insert(i,&quot;,&quot;);\n    }\n    System.out.println(str.toString());\n}\n\n}\n</code></pre><h1 id=\"Java-中基本类型和包装类之间的转换\"><a href=\"#Java-中基本类型和包装类之间的转换\" class=\"headerlink\" title=\"Java 中基本类型和包装类之间的转换\"></a>Java 中基本类型和包装类之间的转换</h1><h2 id=\"基本类型和包装类之间经常需要互相转换，以-Integer-为例（其他几个包装类的操作雷同哦）：\"><a href=\"#基本类型和包装类之间经常需要互相转换，以-Integer-为例（其他几个包装类的操作雷同哦）：\" class=\"headerlink\" title=\"基本类型和包装类之间经常需要互相转换，以    Integer 为例（其他几个包装类的操作雷同哦）：\"></a>基本类型和包装类之间经常需要互相转换，以    Integer 为例（其他几个包装类的操作雷同哦）：</h2><pre><code>Integer a=new Integer(3);//定义Integer包装类对象，\nint b=a+3; //将对象和基本类型进行运算；\n</code></pre><h3 id=\"在-JDK1-5-引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。\"><a href=\"#在-JDK1-5-引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。\" class=\"headerlink\" title=\"在 JDK1.5   引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。\"></a>在 JDK1.5   引入自动装箱和拆箱的机制后，包装类和基本类型之间的转换就更加轻松便利了。</h3><p>那什么是装箱和拆箱呢？我们分别来看下</p>\n<p>装箱：把基本类型转换成包装类，使其具有对象的性质，又可分为手动装箱和自动装箱</p>\n<pre><code>int i =10; //定义 一个基本类型值\nInteger x=new Integer(i);//手动装箱\nInteger y=i;  //自动装箱\n</code></pre><p>拆箱：和装箱相反，把包装类对象转换成基本类型的值，又可分为手动拆箱和自动拆箱</p>\n<pre><code>Integer j= new Integer(8);\nint m = j.intValue();//手动拆箱\nint n = j; //自动拆箱为int型\n</code></pre><p>在程序开发中，我们经常需要在基本数据类型和字符串之间进行转换。</p>\n<p>其中，基本类型转换为字符串有三种方法：</p>\n<ol>\n<li><p>使用包装类的 toString() 方法</p>\n</li>\n<li><p>使用String类的 valueOf() 方法</p>\n</li>\n<li><p>用一个空字符串加上基本类型，得到的就是基本类型数据对应的字符串</p>\n</li>\n</ol>\n<pre><code>//将基本类型转化为字符串\nint c=10;\nString str1=Integer.toString(c);//方法一\nString str2=String.valueOf(c); //方法二\nString str3=c+&quot;&quot;; //方法三\n</code></pre><h2 id=\"再来看，将字符串转换成基本类型有两种方法：\"><a href=\"#再来看，将字符串转换成基本类型有两种方法：\" class=\"headerlink\" title=\"再来看，将字符串转换成基本类型有两种方法：\"></a>再来看，将字符串转换成基本类型有两种方法：</h2><ol>\n<li><p>调用包装类的 parseXxx 静态方法</p>\n</li>\n<li><p>调用包装类的 valueOf() 方法转换为基本类型的包装类，会自动拆箱</p>\n</li>\n</ol>\n<pre><code>//将字符串转换为基本类型\nString str =&quot;8&quot;;\nint d = Integer.parseInt(str);//方法一\nint e = Integer.valueOf(str);//方法二\n</code></pre><p>PS：其他基本类型与字符串的相互转化这里不再一一列出，方法都类似<br>实例： </p>\n<pre><code>public class HelloWorld {\npublic static void main(String[] args) {\n\n    double m = 78.5;\n    //将基本类型转换为字符串\n    String str1 =m  + &quot;&quot; ;\n    //String str1 = String.valueOf(m);\n    //String str1 = String.toString(m);\n    System.out.println(&quot;m 转换为String型后与整数20的求和结果为： &quot;+(str1+20));\n\n    String str = &quot;180.20&quot;;\n    // 将字符串转换为基本类型\n    Double a =  Double.valueOf(str) ;\n    //Double a = Double.parseDouble(str);\n    System.out.println(&quot;str 转换为double型后与整数20的求和结果为： &quot;+(a+20));\n  }\n}\n</code></pre><p>结果：</p>\n<pre><code>m 转换为String型后与整数20的求和结果为： 78.520 str转换为double型后与整数20的求和结果为：200.2\n</code></pre>"},{"title":"hexo主题的安装和简单配置","date":"2016-04-16T10:58:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"**hexo创建和部署到github上** <!-- more -->\n# 后记\n** 默认是自己的github上在你的账户下存在一个仓库 格式如 **  \n      ** ABC(github的名字)/ABC.github.io  ABC.github.io 格式的仓库默认只允许建立一个**\n\n# 安装hexo\n    $ npm install -g hexo\n#  hexo文件夹的创建\n    在你想放置hexo主题的磁盘目录下建立hexo文件夹 （D: \\HEXO）\n\t在 该文件夹目录下右键 ---> git bash here\n\t$ hexo init\n# 安装依赖包\n    $ npm install\n# 本地部署\n    $ hexo g     g = generate  (生成)\n\t$ hexo s     s = server   (启动本地服务)\n# 在本地预览hexo主题的博客\n    打开浏览器，在浏览器地址栏输入：\n\t\t\t\t\tlocalhost:4000  & http://127.0.0.1:4000  \n# 修改配置 _config.yml  文件位置：hexo文件夹下\n    找到deploy：\n\t  deploy:\n        type: git\n        repository: https://github.com/youname/youname.github.io.git\n        branch: master\n# 安装一个推送插件\n    $ npm install hexo-deployer-git --save\n# 部署到github\n    $ hexo d     d = deploy\n\n\t\n","source":"_posts/安装hexo.md","raw":"---\ntitle: hexo主题的安装和简单配置\ndate:  2016-04-16 18:58:41\ncategories:\n- 学习总结\n- hexo\n\ntags:\n- 知识管理\n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink:\n---\n**hexo创建和部署到github上** <!-- more -->\n# 后记\n** 默认是自己的github上在你的账户下存在一个仓库 格式如 **  \n      ** ABC(github的名字)/ABC.github.io  ABC.github.io 格式的仓库默认只允许建立一个**\n\n# 安装hexo\n    $ npm install -g hexo\n#  hexo文件夹的创建\n    在你想放置hexo主题的磁盘目录下建立hexo文件夹 （D: \\HEXO）\n\t在 该文件夹目录下右键 ---> git bash here\n\t$ hexo init\n# 安装依赖包\n    $ npm install\n# 本地部署\n    $ hexo g     g = generate  (生成)\n\t$ hexo s     s = server   (启动本地服务)\n# 在本地预览hexo主题的博客\n    打开浏览器，在浏览器地址栏输入：\n\t\t\t\t\tlocalhost:4000  & http://127.0.0.1:4000  \n# 修改配置 _config.yml  文件位置：hexo文件夹下\n    找到deploy：\n\t  deploy:\n        type: git\n        repository: https://github.com/youname/youname.github.io.git\n        branch: master\n# 安装一个推送插件\n    $ npm install hexo-deployer-git --save\n# 部署到github\n    $ hexo d     d = deploy\n\n\t\n","slug":"安装hexo","published":1,"updated":"2016-04-17T07:23:00.000Z","layout":"post","photos":[],"link":"","_id":"civ3o6v9y000bf027soi5fdbx","content":"<p><strong>hexo创建和部署到github上</strong> <a id=\"more\"></a></p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p><strong> 默认是自己的github上在你的账户下存在一个仓库 格式如 </strong><br>      <strong> ABC(github的名字)/ABC.github.io  ABC.github.io 格式的仓库默认只允许建立一个</strong></p>\n<h1 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h1><pre><code>$ npm install -g hexo\n</code></pre><h1 id=\"hexo文件夹的创建\"><a href=\"#hexo文件夹的创建\" class=\"headerlink\" title=\"hexo文件夹的创建\"></a>hexo文件夹的创建</h1><pre><code>在你想放置hexo主题的磁盘目录下建立hexo文件夹 （D: \\HEXO）\n在 该文件夹目录下右键 ---&gt; git bash here\n$ hexo init\n</code></pre><h1 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h1><pre><code>$ npm install\n</code></pre><h1 id=\"本地部署\"><a href=\"#本地部署\" class=\"headerlink\" title=\"本地部署\"></a>本地部署</h1><pre><code>$ hexo g     g = generate  (生成)\n$ hexo s     s = server   (启动本地服务)\n</code></pre><h1 id=\"在本地预览hexo主题的博客\"><a href=\"#在本地预览hexo主题的博客\" class=\"headerlink\" title=\"在本地预览hexo主题的博客\"></a>在本地预览hexo主题的博客</h1><pre><code>打开浏览器，在浏览器地址栏输入：\n                localhost:4000  &amp; http://127.0.0.1:4000  \n</code></pre><h1 id=\"修改配置-config-yml-文件位置：hexo文件夹下\"><a href=\"#修改配置-config-yml-文件位置：hexo文件夹下\" class=\"headerlink\" title=\"修改配置 _config.yml  文件位置：hexo文件夹下\"></a>修改配置 _config.yml  文件位置：hexo文件夹下</h1><pre><code>找到deploy：\n  deploy:\n    type: git\n    repository: https://github.com/youname/youname.github.io.git\n    branch: master\n</code></pre><h1 id=\"安装一个推送插件\"><a href=\"#安装一个推送插件\" class=\"headerlink\" title=\"安装一个推送插件\"></a>安装一个推送插件</h1><pre><code>$ npm install hexo-deployer-git --save\n</code></pre><h1 id=\"部署到github\"><a href=\"#部署到github\" class=\"headerlink\" title=\"部署到github\"></a>部署到github</h1><pre><code>$ hexo d     d = deploy\n</code></pre>","excerpt":"<p><strong>hexo创建和部署到github上</strong>","more":"</p>\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><p><strong> 默认是自己的github上在你的账户下存在一个仓库 格式如 </strong><br>      <strong> ABC(github的名字)/ABC.github.io  ABC.github.io 格式的仓库默认只允许建立一个</strong></p>\n<h1 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h1><pre><code>$ npm install -g hexo\n</code></pre><h1 id=\"hexo文件夹的创建\"><a href=\"#hexo文件夹的创建\" class=\"headerlink\" title=\"hexo文件夹的创建\"></a>hexo文件夹的创建</h1><pre><code>在你想放置hexo主题的磁盘目录下建立hexo文件夹 （D: \\HEXO）\n在 该文件夹目录下右键 ---&gt; git bash here\n$ hexo init\n</code></pre><h1 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h1><pre><code>$ npm install\n</code></pre><h1 id=\"本地部署\"><a href=\"#本地部署\" class=\"headerlink\" title=\"本地部署\"></a>本地部署</h1><pre><code>$ hexo g     g = generate  (生成)\n$ hexo s     s = server   (启动本地服务)\n</code></pre><h1 id=\"在本地预览hexo主题的博客\"><a href=\"#在本地预览hexo主题的博客\" class=\"headerlink\" title=\"在本地预览hexo主题的博客\"></a>在本地预览hexo主题的博客</h1><pre><code>打开浏览器，在浏览器地址栏输入：\n                localhost:4000  &amp; http://127.0.0.1:4000  \n</code></pre><h1 id=\"修改配置-config-yml-文件位置：hexo文件夹下\"><a href=\"#修改配置-config-yml-文件位置：hexo文件夹下\" class=\"headerlink\" title=\"修改配置 _config.yml  文件位置：hexo文件夹下\"></a>修改配置 _config.yml  文件位置：hexo文件夹下</h1><pre><code>找到deploy：\n  deploy:\n    type: git\n    repository: https://github.com/youname/youname.github.io.git\n    branch: master\n</code></pre><h1 id=\"安装一个推送插件\"><a href=\"#安装一个推送插件\" class=\"headerlink\" title=\"安装一个推送插件\"></a>安装一个推送插件</h1><pre><code>$ npm install hexo-deployer-git --save\n</code></pre><h1 id=\"部署到github\"><a href=\"#部署到github\" class=\"headerlink\" title=\"部署到github\"></a>部署到github</h1><pre><code>$ hexo d     d = deploy\n</code></pre>"},{"title":"重新在另外一台电脑push 了一遍，好累！","date":"2016-04-14T10:58:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"刚换了一台新机，由于是刚开始接触**hexo**和**github**。<!-- more -->\n\n好多都不懂，只能百度什么的，照着依葫芦画瓢，虽然也弄到了这一步，但是好多的只是了解。并不怎么会玩，看了网上的说可以git clone 已挂在github\n上的项目，可是clone后，由于本地没有hexo的环境，所以还是不行。是不是自己进入了胡同，没弄明白。又看着各位网上大神挂出的教程，默默在搞一遍，\n自己其实不想怎么浪费时间在这种重复多遍后就可以完全掌握的简单命令上，我们做事要有重点和目标，简单的事一直在重复，自己就没有时间去提高自己的技能。\n想着把它就当作练习作业给练练手，同时掌握下使用【markdown】语法。这个真的很强大，简单，易懂。\n\n---\n\n","source":"_posts/记录.md","raw":"---\ntitle: 重新在另外一台电脑push 了一遍，好累！\ndate:  2016-04-14 18:58:41\ncategories:\n- 思考感悟\n\ntags:\n- 学习总结\n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink: \n---\n刚换了一台新机，由于是刚开始接触**hexo**和**github**。<!-- more -->\n\n好多都不懂，只能百度什么的，照着依葫芦画瓢，虽然也弄到了这一步，但是好多的只是了解。并不怎么会玩，看了网上的说可以git clone 已挂在github\n上的项目，可是clone后，由于本地没有hexo的环境，所以还是不行。是不是自己进入了胡同，没弄明白。又看着各位网上大神挂出的教程，默默在搞一遍，\n自己其实不想怎么浪费时间在这种重复多遍后就可以完全掌握的简单命令上，我们做事要有重点和目标，简单的事一直在重复，自己就没有时间去提高自己的技能。\n想着把它就当作练习作业给练练手，同时掌握下使用【markdown】语法。这个真的很强大，简单，易懂。\n\n---\n\n","slug":"记录","published":1,"updated":"2016-11-04T08:37:11.377Z","layout":"post","photos":[],"link":"","_id":"civ3o6va4000ef027tlz6q7ec","content":"<p>刚换了一台新机，由于是刚开始接触<strong>hexo</strong>和<strong>github</strong>。<a id=\"more\"></a></p>\n<p>好多都不懂，只能百度什么的，照着依葫芦画瓢，虽然也弄到了这一步，但是好多的只是了解。并不怎么会玩，看了网上的说可以git clone 已挂在github<br>上的项目，可是clone后，由于本地没有hexo的环境，所以还是不行。是不是自己进入了胡同，没弄明白。又看着各位网上大神挂出的教程，默默在搞一遍，<br>自己其实不想怎么浪费时间在这种重复多遍后就可以完全掌握的简单命令上，我们做事要有重点和目标，简单的事一直在重复，自己就没有时间去提高自己的技能。<br>想着把它就当作练习作业给练练手，同时掌握下使用【markdown】语法。这个真的很强大，简单，易懂。</p>\n<hr>\n","excerpt":"<p>刚换了一台新机，由于是刚开始接触<strong>hexo</strong>和<strong>github</strong>。","more":"</p>\n<p>好多都不懂，只能百度什么的，照着依葫芦画瓢，虽然也弄到了这一步，但是好多的只是了解。并不怎么会玩，看了网上的说可以git clone 已挂在github<br>上的项目，可是clone后，由于本地没有hexo的环境，所以还是不行。是不是自己进入了胡同，没弄明白。又看着各位网上大神挂出的教程，默默在搞一遍，<br>自己其实不想怎么浪费时间在这种重复多遍后就可以完全掌握的简单命令上，我们做事要有重点和目标，简单的事一直在重复，自己就没有时间去提高自己的技能。<br>想着把它就当作练习作业给练练手，同时掌握下使用【markdown】语法。这个真的很强大，简单，易懂。</p>\n<hr>"},{"title":"校招 愿所期待的一切如期而至","date":"2016-10-30T14:23:11.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"** 本人是计算机科学与技术专业的本科生一枚，走的Android开发，学校在重庆，但离重庆好远！** <!-- more -->\n我是程序猿，大家的感觉就是这样，其实我自己是不信。\n![](http://og3vcdqsa.bkt.clouddn.com/%E7%8C%BF.jpg)\n#  最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！\n![](http://og3vcdqsa.bkt.clouddn.com/7_4.jpg)\n\n\n\n---\n\n","source":"_posts/校招.md","raw":"---\ntitle: 校招 愿所期待的一切如期而至\ndate:  2016-10-30 22:23:11\ncategories:\n- 思考总结\n\ntags:\n- 学习总结\n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink: \n---\n** 本人是计算机科学与技术专业的本科生一枚，走的Android开发，学校在重庆，但离重庆好远！** <!-- more -->\n我是程序猿，大家的感觉就是这样，其实我自己是不信。\n![](http://og3vcdqsa.bkt.clouddn.com/%E7%8C%BF.jpg)\n#  最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！\n![](http://og3vcdqsa.bkt.clouddn.com/7_4.jpg)\n\n\n\n---\n\n","slug":"校招","published":1,"updated":"2016-11-04T10:35:38.616Z","layout":"post","photos":[],"link":"","_id":"civ3o6va8000hf027yb1rayh1","content":"<p><strong> 本人是计算机科学与技术专业的本科生一枚，走的Android开发，学校在重庆，但离重庆好远！</strong> <a id=\"more\"></a><br>我是程序猿，大家的感觉就是这样，其实我自己是不信。<br><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E7%8C%BF.jpg\" alt=\"\"></p>\n<h1 id=\"最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！\"><a href=\"#最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！\" class=\"headerlink\" title=\"最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！\"></a>最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！</h1><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/7_4.jpg\" alt=\"\"></p>\n<hr>\n","excerpt":"<p><strong> 本人是计算机科学与技术专业的本科生一枚，走的Android开发，学校在重庆，但离重庆好远！</strong>","more":"<br>我是程序猿，大家的感觉就是这样，其实我自己是不信。<br><img src=\"http://og3vcdqsa.bkt.clouddn.com/%E7%8C%BF.jpg\" alt=\"\"></p>\n<h1 id=\"最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！\"><a href=\"#最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！\" class=\"headerlink\" title=\"最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！\"></a>最近学校再弄校招，我们专业在学校就是一个鸡肋，也没多少公司会来。来过几个，但每次都是去听听那些人讲一通，然后笔试，然后就没有然后了。但是自己出去找了几次，是不是自己的问题，去面试的公司最后都想要叫去培训公司培训3-4个月，自己的内心是崩溃的。可能是和外面的世界接触不多，没怎么感觉到就业的压力，然后自己想自学，不想去参加什么招聘会。但有机会还是要抓住，早点去公司提升得可能会更快。祝自己早日找到希望的工作！</h1><p><img src=\"http://og3vcdqsa.bkt.clouddn.com/7_4.jpg\" alt=\"\"></p>\n<hr>"},{"title":"域名证书","date":"2016-10-04T10:58:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"**证书** <!-- more -->\n\n# 真实有效\n ![](http://og3vcdqsa.bkt.clouddn.com/%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6.png)\n<!-- more -->\n\n\n---\n\n","source":"_posts/证书.md","raw":"---\ntitle: 域名证书\ndate:  2016-10-04 18:58:41\ncategories:\n- \n\ntags:\n- \n\nauthor: MuDeBin\ncomments: \noriginal:\npermalink: \n---\n**证书** <!-- more -->\n\n# 真实有效\n ![](http://og3vcdqsa.bkt.clouddn.com/%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6.png)\n<!-- more -->\n\n\n---\n\n","slug":"证书","published":1,"updated":"2016-11-04T10:45:20.171Z","layout":"post","photos":[],"link":"","_id":"civ3o6vak000kf027m7ys22aa","content":"<p><strong>证书</strong> <a id=\"more\"></a></p>\n<h1 id=\"真实有效\"><a href=\"#真实有效\" class=\"headerlink\" title=\"真实有效\"></a>真实有效</h1><p> <img src=\"http://og3vcdqsa.bkt.clouddn.com/%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6.png\" alt=\"\"><br><!-- more --></p>\n<hr>\n","excerpt":"<p><strong>证书</strong>","more":"</p>\n<h1 id=\"真实有效\"><a href=\"#真实有效\" class=\"headerlink\" title=\"真实有效\"></a>真实有效</h1><p> <img src=\"http://og3vcdqsa.bkt.clouddn.com/%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6.png\" alt=\"\"><br><!-- more --></p>\n<hr>"},{"title":"windows系统安装","date":"2016-04-16T14:58:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"**windows 7/10 系统USB安装教程，抱歉没图，以后改进。** <!-- more -->\n# 题记\n**现在好多人都对电脑很熟悉了，但是时间用久了或者出现系统故障了，就会面临先要重装系统的想法**\n# 排除自己是那种不想学点新东西的人\n\n\n    装系统还的自己亲自动手？？你 out 了，谁的电脑不装个360、电脑管家神的，第一可以杀毒，清垃圾啥的。\n\t其实我们的电脑小白用户完全不用装这些，占用大量资源不说，拖慢系统，造成卡顿，全家桶的情况时常发生。\n\t我也不是在这说这个，跳过。哈哈，其实这些软件里都有一键重装系统。我只了解过，不怎么熟，本人从来不用。\n# 先去下载纯系统，不要使用ghost的系统\n    推荐一个网站，微软的正版软件都在里面，我比较喜欢。\n    百度直搜 ：[msdn](http://www.itellyou.cn/)  选择左侧菜单 操作系统 下载自己想要的系统 \n# 准备一个不小于8G的U盘\n    这里我也是用喜欢那个PE环境来装\n    网上搜U盘启动盘的制作，一堆！\n# 开始安装\n    把下好的系统拷在刚弄好的启动盘里。\n    重新启动电脑，看自己的电脑品牌，不造的百度查，选择F2 / F12 / ESC等这些快速进入开机启动项选择 ，选择U盘进入PE环境 。\n    bios设置启动开机默认U盘，进入Bios方法（看品牌查进入bios的方式），选择 U盘为第一启动项。\n# 其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，\n# 不用PE环境安装\n   ** 磁盘分区是MBR **\n    1. 找一个不含资料的空U盘，把ISO格式的系统解压到U盘\n    2. 开机选择U盘启动，直接进入安装界面。","source":"_posts/安装windows系统教程.md","raw":"---\ntitle: windows系统安装\ndate:  2016-04-16 22:58:41\ncategories:\n- windows\n- 学习总结\n- win 7/10\n\ntags:\n- 学习总结\n\nauthor: MuDeBin\ncomments:\noriginal:\npermalink:\n---\n**windows 7/10 系统USB安装教程，抱歉没图，以后改进。** <!-- more -->\n# 题记\n**现在好多人都对电脑很熟悉了，但是时间用久了或者出现系统故障了，就会面临先要重装系统的想法**\n# 排除自己是那种不想学点新东西的人\n\n\n    装系统还的自己亲自动手？？你 out 了，谁的电脑不装个360、电脑管家神的，第一可以杀毒，清垃圾啥的。\n\t其实我们的电脑小白用户完全不用装这些，占用大量资源不说，拖慢系统，造成卡顿，全家桶的情况时常发生。\n\t我也不是在这说这个，跳过。哈哈，其实这些软件里都有一键重装系统。我只了解过，不怎么熟，本人从来不用。\n# 先去下载纯系统，不要使用ghost的系统\n    推荐一个网站，微软的正版软件都在里面，我比较喜欢。\n    百度直搜 ：[msdn](http://www.itellyou.cn/)  选择左侧菜单 操作系统 下载自己想要的系统 \n# 准备一个不小于8G的U盘\n    这里我也是用喜欢那个PE环境来装\n    网上搜U盘启动盘的制作，一堆！\n# 开始安装\n    把下好的系统拷在刚弄好的启动盘里。\n    重新启动电脑，看自己的电脑品牌，不造的百度查，选择F2 / F12 / ESC等这些快速进入开机启动项选择 ，选择U盘进入PE环境 。\n    bios设置启动开机默认U盘，进入Bios方法（看品牌查进入bios的方式），选择 U盘为第一启动项。\n# 其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，\n# 不用PE环境安装\n   ** 磁盘分区是MBR **\n    1. 找一个不含资料的空U盘，把ISO格式的系统解压到U盘\n    2. 开机选择U盘启动，直接进入安装界面。","slug":"安装windows系统教程","published":1,"updated":"2016-09-26T08:01:00.127Z","layout":"post","photos":[],"link":"","_id":"civ3o6vbn001ef027gdfkblqh","content":"<p><strong>windows 7/10 系统USB安装教程，抱歉没图，以后改进。</strong> <a id=\"more\"></a></p>\n<h1 id=\"题记\"><a href=\"#题记\" class=\"headerlink\" title=\"题记\"></a>题记</h1><p><strong>现在好多人都对电脑很熟悉了，但是时间用久了或者出现系统故障了，就会面临先要重装系统的想法</strong></p>\n<h1 id=\"排除自己是那种不想学点新东西的人\"><a href=\"#排除自己是那种不想学点新东西的人\" class=\"headerlink\" title=\"排除自己是那种不想学点新东西的人\"></a>排除自己是那种不想学点新东西的人</h1><pre><code>装系统还的自己亲自动手？？你 out 了，谁的电脑不装个360、电脑管家神的，第一可以杀毒，清垃圾啥的。\n其实我们的电脑小白用户完全不用装这些，占用大量资源不说，拖慢系统，造成卡顿，全家桶的情况时常发生。\n我也不是在这说这个，跳过。哈哈，其实这些软件里都有一键重装系统。我只了解过，不怎么熟，本人从来不用。\n</code></pre><h1 id=\"先去下载纯系统，不要使用ghost的系统\"><a href=\"#先去下载纯系统，不要使用ghost的系统\" class=\"headerlink\" title=\"先去下载纯系统，不要使用ghost的系统\"></a>先去下载纯系统，不要使用ghost的系统</h1><pre><code>推荐一个网站，微软的正版软件都在里面，我比较喜欢。\n百度直搜 ：[msdn](http://www.itellyou.cn/)  选择左侧菜单 操作系统 下载自己想要的系统 \n</code></pre><h1 id=\"准备一个不小于8G的U盘\"><a href=\"#准备一个不小于8G的U盘\" class=\"headerlink\" title=\"准备一个不小于8G的U盘\"></a>准备一个不小于8G的U盘</h1><pre><code>这里我也是用喜欢那个PE环境来装\n网上搜U盘启动盘的制作，一堆！\n</code></pre><h1 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h1><pre><code>把下好的系统拷在刚弄好的启动盘里。\n重新启动电脑，看自己的电脑品牌，不造的百度查，选择F2 / F12 / ESC等这些快速进入开机启动项选择 ，选择U盘进入PE环境 。\nbios设置启动开机默认U盘，进入Bios方法（看品牌查进入bios的方式），选择 U盘为第一启动项。\n</code></pre><h1 id=\"其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，\"><a href=\"#其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，\" class=\"headerlink\" title=\"其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，\"></a>其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，</h1><h1 id=\"不用PE环境安装\"><a href=\"#不用PE环境安装\" class=\"headerlink\" title=\"不用PE环境安装\"></a>不用PE环境安装</h1><p>   <strong> 磁盘分区是MBR </strong></p>\n<pre><code>1. 找一个不含资料的空U盘，把ISO格式的系统解压到U盘\n2. 开机选择U盘启动，直接进入安装界面。\n</code></pre>","excerpt":"<p><strong>windows 7/10 系统USB安装教程，抱歉没图，以后改进。</strong>","more":"</p>\n<h1 id=\"题记\"><a href=\"#题记\" class=\"headerlink\" title=\"题记\"></a>题记</h1><p><strong>现在好多人都对电脑很熟悉了，但是时间用久了或者出现系统故障了，就会面临先要重装系统的想法</strong></p>\n<h1 id=\"排除自己是那种不想学点新东西的人\"><a href=\"#排除自己是那种不想学点新东西的人\" class=\"headerlink\" title=\"排除自己是那种不想学点新东西的人\"></a>排除自己是那种不想学点新东西的人</h1><pre><code>装系统还的自己亲自动手？？你 out 了，谁的电脑不装个360、电脑管家神的，第一可以杀毒，清垃圾啥的。\n其实我们的电脑小白用户完全不用装这些，占用大量资源不说，拖慢系统，造成卡顿，全家桶的情况时常发生。\n我也不是在这说这个，跳过。哈哈，其实这些软件里都有一键重装系统。我只了解过，不怎么熟，本人从来不用。\n</code></pre><h1 id=\"先去下载纯系统，不要使用ghost的系统\"><a href=\"#先去下载纯系统，不要使用ghost的系统\" class=\"headerlink\" title=\"先去下载纯系统，不要使用ghost的系统\"></a>先去下载纯系统，不要使用ghost的系统</h1><pre><code>推荐一个网站，微软的正版软件都在里面，我比较喜欢。\n百度直搜 ：[msdn](http://www.itellyou.cn/)  选择左侧菜单 操作系统 下载自己想要的系统 \n</code></pre><h1 id=\"准备一个不小于8G的U盘\"><a href=\"#准备一个不小于8G的U盘\" class=\"headerlink\" title=\"准备一个不小于8G的U盘\"></a>准备一个不小于8G的U盘</h1><pre><code>这里我也是用喜欢那个PE环境来装\n网上搜U盘启动盘的制作，一堆！\n</code></pre><h1 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h1><pre><code>把下好的系统拷在刚弄好的启动盘里。\n重新启动电脑，看自己的电脑品牌，不造的百度查，选择F2 / F12 / ESC等这些快速进入开机启动项选择 ，选择U盘进入PE环境 。\nbios设置启动开机默认U盘，进入Bios方法（看品牌查进入bios的方式），选择 U盘为第一启动项。\n</code></pre><h1 id=\"其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，\"><a href=\"#其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，\" class=\"headerlink\" title=\"其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，\"></a>其他的PE里怎么安装，在你制作启动盘的软件里就有教程，巨细。我也不在此啰嗦，</h1><h1 id=\"不用PE环境安装\"><a href=\"#不用PE环境安装\" class=\"headerlink\" title=\"不用PE环境安装\"></a>不用PE环境安装</h1><p>   <strong> 磁盘分区是MBR </strong></p>\n<pre><code>1. 找一个不含资料的空U盘，把ISO格式的系统解压到U盘\n2. 开机选择U盘启动，直接进入安装界面。\n</code></pre>"},{"title":"搭建一个属于自己的网站，虽然自己可能不搞前端","date":"2016-04-13T10:58:41.000Z","author":"MuDeBin","comments":1,"original":null,"_content":"大二的时候就在阿里云注册一个域名<!-- more -->并用里面免费的模板建了自己的第一个网站，里面的可定制性很差，虽然有现成的模板，但改成自己喜欢的样式，\n工作量很大，而且只能使用一年，需要自己花钱去买服务器和数据库，这当然是自己不能承担的量，所以简单的做了一个首页。一开始的想法是自己把网站建好传在\n云上的操作系统里。那时自己就把自己以后的目标定了，虽然学了一些java 和ssh架构什么的。自己要学的还很多，比如js，jquery ,jsons。所以也不了了之了。\n有一天恰好看到hexo + github 。我突然觉得这就是我想要的，自己只需要一个属于自己的域名，不考虑其他，还可以自定义。以前也是看了那个wordpress建站。\n但自己没学过PHP。哈哈，so,我就加入hexo + github的怀抱。","source":"_posts/搭建Blog的想法.md","raw":"---\ntitle: 搭建一个属于自己的网站，虽然自己可能不搞前端\ndate:  2016-04-13 18:58:41\ncategories:\n- 思考感悟\n- 学习总结\n\ntags:\n- 学习总结\n\nauthor: MuDeBin\ncomments:\noriginal:\npermalink:\n---\n大二的时候就在阿里云注册一个域名<!-- more -->并用里面免费的模板建了自己的第一个网站，里面的可定制性很差，虽然有现成的模板，但改成自己喜欢的样式，\n工作量很大，而且只能使用一年，需要自己花钱去买服务器和数据库，这当然是自己不能承担的量，所以简单的做了一个首页。一开始的想法是自己把网站建好传在\n云上的操作系统里。那时自己就把自己以后的目标定了，虽然学了一些java 和ssh架构什么的。自己要学的还很多，比如js，jquery ,jsons。所以也不了了之了。\n有一天恰好看到hexo + github 。我突然觉得这就是我想要的，自己只需要一个属于自己的域名，不考虑其他，还可以自定义。以前也是看了那个wordpress建站。\n但自己没学过PHP。哈哈，so,我就加入hexo + github的怀抱。","slug":"搭建Blog的想法","published":1,"updated":"2016-04-17T07:24:54.000Z","layout":"post","photos":[],"link":"","_id":"civ3o6vbp001ff027d8tiaysf","content":"<p>大二的时候就在阿里云注册一个域名<a id=\"more\"></a>并用里面免费的模板建了自己的第一个网站，里面的可定制性很差，虽然有现成的模板，但改成自己喜欢的样式，<br>工作量很大，而且只能使用一年，需要自己花钱去买服务器和数据库，这当然是自己不能承担的量，所以简单的做了一个首页。一开始的想法是自己把网站建好传在<br>云上的操作系统里。那时自己就把自己以后的目标定了，虽然学了一些java 和ssh架构什么的。自己要学的还很多，比如js，jquery ,jsons。所以也不了了之了。<br>有一天恰好看到hexo + github 。我突然觉得这就是我想要的，自己只需要一个属于自己的域名，不考虑其他，还可以自定义。以前也是看了那个wordpress建站。<br>但自己没学过PHP。哈哈，so,我就加入hexo + github的怀抱。</p>\n","excerpt":"<p>大二的时候就在阿里云注册一个域名","more":"并用里面免费的模板建了自己的第一个网站，里面的可定制性很差，虽然有现成的模板，但改成自己喜欢的样式，<br>工作量很大，而且只能使用一年，需要自己花钱去买服务器和数据库，这当然是自己不能承担的量，所以简单的做了一个首页。一开始的想法是自己把网站建好传在<br>云上的操作系统里。那时自己就把自己以后的目标定了，虽然学了一些java 和ssh架构什么的。自己要学的还很多，比如js，jquery ,jsons。所以也不了了之了。<br>有一天恰好看到hexo + github 。我突然觉得这就是我想要的，自己只需要一个属于自己的域名，不考虑其他，还可以自定义。以前也是看了那个wordpress建站。<br>但自己没学过PHP。哈哈，so,我就加入hexo + github的怀抱。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"civ3o6v9g0005f027nnqe2m09","category_id":"civ3o6va9000if02788vpfg2n","_id":"civ3o6vap000qf0271po0jsdm"},{"post_id":"civ3o6v9m0006f027ph4ehbje","category_id":"civ3o6va9000if02788vpfg2n","_id":"civ3o6vaq000uf027x61lkuli"},{"post_id":"civ3o6v9r0008f027wax0jswy","category_id":"civ3o6va9000if02788vpfg2n","_id":"civ3o6var000wf027g7wil7ba"},{"post_id":"civ3o6v900001f027iwr1rv9o","category_id":"civ3o6v9p0007f027ibzroxt4","_id":"civ3o6vas000yf027mmfs1mk0"},{"post_id":"civ3o6v900001f027iwr1rv9o","category_id":"civ3o6var000vf027lojfddr4","_id":"civ3o6vas0010f0277mngd6tm"},{"post_id":"civ3o6va4000ef027tlz6q7ec","category_id":"civ3o6vas000zf027w63jdmhj","_id":"civ3o6vau0012f027jga814is"},{"post_id":"civ3o6v9c0003f027bar1rzpe","category_id":"civ3o6va2000cf027nkh1pg3i","_id":"civ3o6vau0014f0273u76donu"},{"post_id":"civ3o6v9c0003f027bar1rzpe","category_id":"civ3o6vat0011f027tbltqewv","_id":"civ3o6vav0016f027f4zvv9ol"},{"post_id":"civ3o6va8000hf027yb1rayh1","category_id":"civ3o6vau0013f027h2nkucrq","_id":"civ3o6vav0017f027pj3img8f"},{"post_id":"civ3o6v8u0000f0272wrbmran","category_id":"civ3o6v960002f027d9ib28qg","_id":"civ3o6vax0019f027rh65ezj5"},{"post_id":"civ3o6v8u0000f0272wrbmran","category_id":"civ3o6van000of0276wwu2twy","_id":"civ3o6vax001af027ppf49kaf"},{"post_id":"civ3o6v8u0000f0272wrbmran","category_id":"civ3o6vau0015f027bl55061s","_id":"civ3o6vax001bf027qaphftwc"},{"post_id":"civ3o6v9y000bf027soi5fdbx","category_id":"civ3o6var000xf0277lbexz4t","_id":"civ3o6vax001cf027hbjk7q9y"},{"post_id":"civ3o6v9y000bf027soi5fdbx","category_id":"civ3o6vaw0018f027jmvkxogq","_id":"civ3o6vay001df0276d752wjq"},{"post_id":"civ3o6vbp001ff027d8tiaysf","category_id":"civ3o6vas000zf027w63jdmhj","_id":"civ3o6vbt001lf027kacxfmyk"},{"post_id":"civ3o6vbp001ff027d8tiaysf","category_id":"civ3o6vbs001jf027hhird6ot","_id":"civ3o6vbu001mf027qx1ozoc1"},{"post_id":"civ3o6vbn001ef027gdfkblqh","category_id":"civ3o6vbr001gf0277hed8lsu","_id":"civ3o6vbv001of0270kt5mj8t"},{"post_id":"civ3o6vbn001ef027gdfkblqh","category_id":"civ3o6vbt001kf0271x9ho8qg","_id":"civ3o6vbw001pf027v6jv6vpj"},{"post_id":"civ3o6vbn001ef027gdfkblqh","category_id":"civ3o6vbu001nf027q59cndbk","_id":"civ3o6vbw001qf027i8vpxjtn"}],"PostTag":[{"post_id":"civ3o6v9m0006f027ph4ehbje","tag_id":"civ3o6v9f0004f027w7yuq1a2","_id":"civ3o6v9x000af027sv7rr9d8"},{"post_id":"civ3o6v900001f027iwr1rv9o","tag_id":"civ3o6v9f0004f027w7yuq1a2","_id":"civ3o6va3000df027byaw5f1f"},{"post_id":"civ3o6v9r0008f027wax0jswy","tag_id":"civ3o6v9f0004f027w7yuq1a2","_id":"civ3o6va6000gf027nr75316t"},{"post_id":"civ3o6v9c0003f027bar1rzpe","tag_id":"civ3o6v9f0004f027w7yuq1a2","_id":"civ3o6vab000jf0271exo5bv2"},{"post_id":"civ3o6va4000ef027tlz6q7ec","tag_id":"civ3o6v9f0004f027w7yuq1a2","_id":"civ3o6vam000mf027ezrybhaq"},{"post_id":"civ3o6va8000hf027yb1rayh1","tag_id":"civ3o6v9f0004f027w7yuq1a2","_id":"civ3o6vam000nf027v57mcog3"},{"post_id":"civ3o6v9g0005f027nnqe2m09","tag_id":"civ3o6v9f0004f027w7yuq1a2","_id":"civ3o6vao000pf02790fge5u3"},{"post_id":"civ3o6v9y000bf027soi5fdbx","tag_id":"civ3o6val000lf0274cleregw","_id":"civ3o6vap000rf0279s1n8qxd"},{"post_id":"civ3o6vbn001ef027gdfkblqh","tag_id":"civ3o6v9f0004f027w7yuq1a2","_id":"civ3o6vbr001hf027f923r6lm"},{"post_id":"civ3o6vbp001ff027d8tiaysf","tag_id":"civ3o6v9f0004f027w7yuq1a2","_id":"civ3o6vbs001if027cgu0ij52"}],"Tag":[{"name":"学习总结","_id":"civ3o6v9f0004f027w7yuq1a2"},{"name":"知识管理","_id":"civ3o6val000lf0274cleregw"}]}}